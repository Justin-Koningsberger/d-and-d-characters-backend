{"version":3,"sources":["characterService.js","components/leftRow/Skill.js","characterReducer.js","components/LandingPage.js","components/CharacterOverview.js","components/leftRow/AbilityScore.js","utilities.js","components/leftRow/AbilityScoreList.js","components/leftRow/SavingThrows.js","components/leftRow/Skills.js","components/leftRow/LangAndProf.js","components/leftRow/LeftRow.js","components/middleRow/Currency.js","components/middleRow/Belongings.js","components/middleRow/Equipment.js","components/middleRow/HitPoint.js","components/middleRow/MiddleRow.js","components/rightRow/TextField.js","components/rightRow/RightRow.js","components/Character.js","components/App.js","store.js","index.js"],"names":["baseUrl","getCharacter","id","a","axios","get","response","data","console","log","message","saveCharacter","character","put","Skill","props","useSelector","state","skillName","name","skillChecked","concat","updateCharacter","event","target","key","value","checked","toString","attributes","skillScore","inputChecked","undefined","eval","className","type","defaultChecked","onClick","e","onChange","ConnectedSkill","connect","findCharacter","dispatch","payload","reducer","action","newState","LandingPage","style","textAlign","paddingTop","history","useHistory","useState","setName","onSubmit","preventDefault","post","resp","push","ConnectedCharacterOverview","charClass","charRace","charAlign","charBackground","min","charExperience","ConnectedAbilityScore","abilityName","maybeNumber","abilityScore","modifier","Math","floor","isNaN","sign","AbilityScoreList","SavingThrows","Skills","ConnectedLangAndProf","proficiencies","languages","LeftRow","ConnectedCurrency","ConnectedBelongings","belongings","Equipment","ConnectedHitPoint","label","fontSize","width","marginLeft","border","MiddleRow","ConnectedTextField","RightRow","Character","useParams","useDispatch","useEffect","height","display","gridTemplateColumns","gridColumnGap","margin","marginTop","App","exact","path","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.06efc240.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = '/api/characters'\n\nexport const getCharacter = async (id) => {\n  try {\n    const response = await axios.get(`${baseUrl}/${id}`)\n\n    return response.data\n  }\n  catch (e) {\n    // If status is 400, character id is most likely wrong\n    console.log('Character not found:', e.message)\n  }\n}\n\nexport const saveCharacter = async (character) => {\n  try {\n    const id = character.id\n    const response = axios.put(`${baseUrl}/${id}`, character)\n\n    return response.data\n  }\n  catch (e) {\n    console.log('error saving character', e)\n  }\n}\n\nexport default { getCharacter, saveCharacter }\n","import { connect, useSelector } from 'react-redux'\nimport { updateCharacter } from '../../characterReducer'\nimport './LeftRow.css'\n\nconst Skill = (props) => {\n  const character = useSelector((state) => state)\n  const skillName = props.name\n  const skillChecked = skillName.concat('Checked')\n\n  const updateCharacter = (event) => {\n    let data\n    if (event.target.id === skillName) {\n      data = {\n        key: skillName,\n        value: event.target.value\n      }\n    }\n    else {\n      data = {\n        key: skillChecked,\n        value: event.target.checked.toString()\n      }\n    }\n    props.updateCharacter(data)\n  }\n\n  if (!character.attributes) {\n    return null\n  }\n\n  const skillScore = character.attributes[skillName]\n  // Backend returns skillChecked as string, eval should be safe here\n  // value can only be 'true' or 'false'\n  const inputChecked = character.attributes[skillChecked] === undefined\n    ? false\n    /* eslint-disable no-eval */\n    : eval(character.attributes[skillChecked])\n\n  return (\n    <div id={skillName}>\n      <input\n        className=\"roundCheckbox\"\n        id={skillChecked}\n        type=\"checkbox\"\n        defaultChecked={inputChecked}\n        onClick={e => updateCharacter(e)}>\n      </input>\n      {/* If I use the signedNumber utility, I can't use type=number */}\n      <input\n        className=\"skillInput\"\n        id={skillName}\n        type=\"number\"\n        value={skillScore}\n        onChange={e => updateCharacter(e)}>\n      </input>\n      <label>{skillName}</label>\n    </div>\n  )\n}\n\nconst ConnectedSkill = connect(null, { updateCharacter })(Skill)\n\nexport default ConnectedSkill\n","import { getCharacter } from './characterService'\n\nexport const findCharacter = (id) => {\n  return async dispatch => {\n    const character = await getCharacter(id)\n    dispatch({\n      type: 'GET_CHARACTER',\n      payload: character\n    })\n  }\n}\n\nexport const updateCharacter = (data) => {\n  return async dispatch => {\n    dispatch({\n      type: 'UPDATE_CHARACTER',\n      payload: data\n    })\n  }\n}\n\nconst reducer = (state = {}, action) => {\n  // console.log('reducer-state now: ', state)\n  // console.log('reducer-action', action)\n  switch (action.type) {\n    case 'GET_CHARACTER':\n      return action.payload\n    case 'UPDATE_CHARACTER':\n      const key = action.payload.key\n      const value = action.payload.value\n      const newState = {...state}\n      newState.attributes[key] = value\n\n      return newState\n    default:\n      return state\n  }\n}\n\nexport default reducer\n","import React, { useState } from 'react'\nimport axios from 'axios'\nimport { useHistory } from 'react-router-dom'\n\nconst LandingPage = () => {\n  const style = {\n    textAlign: \"center\",\n    paddingTop: \"50px\",\n  }\n\n  const baseUrl = '/api/characters'\n  const history = useHistory()\n\n  const [name, setName] = useState('')\n\n  const handleNameChange = (event) => setName(event.target.value)\n\n  const onSubmit = async (event) => {\n    event.preventDefault()\n\n    try {\n      const resp = await axios.post(baseUrl, { name: name })\n      const id = resp.data.id\n      setName('')\n      history.push(`/characters/${id}`)\n\n    }\n    catch (error) {\n      console.log(\"Error: \", error.message)\n    }\n  }\n\n  return (\n    <div>\n      <header className=\"Landing page\" >\n        <h2 style={style}>Create a new character</h2>\n      </header>\n      <div>\n        <form style={style} className=\"Character name\" onSubmit={onSubmit}>\n          <label>\n            Enter a name for your character\n            <input value={name} onChange={handleNameChange} />\n          </label>\n          <button type=\"submit\">add</button>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default LandingPage\n","import React from 'react'\nimport { connect, useSelector } from 'react-redux'\nimport { updateCharacter } from '../characterReducer'\nimport { saveCharacter } from '../characterService'\nimport './CharacterOverview.css'\n\nconst CharacterOverview = (props) => {\n  const character = useSelector((state) => state)\n\n  const updateCharacter = (event) => {\n    const data = { key: event.target.className, value: event.target.value }\n    props.updateCharacter(data)\n  }\n\n  if (!character.attributes) {\n    return null\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"characterName\">\n        <p>\n          {character.name}\n        </p>\n        <label>\n          character name\n        </label>\n        <button onClick={() => saveCharacter(character)}>save</button>\n      </div>\n      <div className=\"characterOverview\">\n        <div className=\"class twoRows\">\n          <input\n            className=\"charClass\"\n            value={character.attributes.charClass}\n            onChange={e => updateCharacter(e)}>\n          </input>\n          <label>class and level</label>\n        </div>\n        <div className=\"race twoRows\">\n          <input\n            className=\"charRace\"\n            value={character.attributes.charRace}\n            onChange={e => updateCharacter(e)}>\n          </input>\n          <label>race</label>\n        </div>\n        <div className=\"alignment twoRows\">\n          <input\n            className=\"charAlign\"\n            value={character.attributes.charAlign}\n            onChange={e => updateCharacter(e)}>\n          </input>\n          <label>alignment</label>\n        </div>\n        <div className=\"background twoRows\">\n          <input\n            className=\"charBackground\"\n            value={character.attributes.charBackground}\n            onChange={e => updateCharacter(e)}>\n          </input>\n          <label>background</label>\n        </div>\n        <div className=\"experience twoRows\">\n          <input\n            className=\"charExperience\"\n            type=\"number\"\n            min=\"0\"\n            value={character.attributes.charExperience}\n            onChange={e => updateCharacter(e)}>\n          </input>\n          <label>experience points</label>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst ConnectedCharacterOverview = connect(null, { updateCharacter })(CharacterOverview)\n\nexport default ConnectedCharacterOverview\n","import { connect, useSelector } from 'react-redux'\nimport { updateCharacter } from '../../characterReducer'\nimport { signedNumber } from '../../utilities'\n\nconst AbilityScore = (props) => {\n  const character = useSelector((state) => state)\n  const abilityName = props.name\n\n  const updateCharacter = (event) => {\n    const data = { key: abilityName, value: event.target.value }\n    props.updateCharacter(data)\n  }\n\n  if (!character.attributes) {\n    return null\n  }\n\n  const abilityScore = character.attributes[abilityName]\n  const modifier = Math.floor((abilityScore-10)/2)\n\n  return (\n    <div className=\"abilityBadge\">\n      <p className=\"name\">{abilityName}</p>\n      <div className=\"modifier\">\n        {signedNumber(modifier)}\n      </div>\n      <div className=\"score\">\n        <input\n          type=\"number\"\n          min=\"0\"\n          value={abilityScore}\n          onChange={e => updateCharacter(e)}>\n        </input>\n      </div>\n    </div>\n  )\n}\n\nconst ConnectedAbilityScore = connect(null, { updateCharacter })(AbilityScore)\n\nexport default ConnectedAbilityScore\n","export const signedNumber = (maybeNumber) => {\n  let displayValue\n  if (isNaN(maybeNumber)) {\n    displayValue = ''\n  }\n  else {\n    displayValue = Math.sign(maybeNumber) < 0 ? maybeNumber : `+${maybeNumber}`\n  }\n  return displayValue\n}\n","import React from 'react'\nimport AbilityScore from './AbilityScore'\nimport './AbilityScores.css'\n\nconst AbilityScoreList = (props) => {\n  return (\n    <div id=\"abilityScoreList\">\n      <AbilityScore name=\"strength\" />\n      <AbilityScore name=\"dexterity\" />\n      <AbilityScore name=\"constitution\" />\n      <AbilityScore name=\"intelligence\" />\n      <AbilityScore name=\"wisdom\" />\n      <AbilityScore name=\"charisma\" />\n    </div>\n  )\n}\n\nexport default AbilityScoreList\n","import React from 'react'\nimport Skill from './Skill'\nimport './SavingThrows.css'\n\nconst SavingThrows = () => {\n  return (\n    <div className=\"savingThrows\">\n      <Skill name=\"strengthST\" />\n      <Skill name=\"dexterityST\" />\n      <Skill name=\"constitutionST\" />\n      <Skill name=\"intelligenceST\" />\n      <Skill name=\"wisdomST\" />\n      <Skill name=\"charismaST\" />\n      <p>saving throws</p>\n    </div>\n  )\n}\n\nexport default SavingThrows\n","import React from 'react'\nimport Skill from './Skill'\n\nconst Skills = () => {\n  return (\n    <div className=\"skills\">\n      <Skill name=\"acrobatics\" />\n      <Skill name=\"animalHandling\" />\n      <Skill name=\"arcana\" />\n      <Skill name=\"athletics\" />\n      <Skill name=\"deception\" />\n      <Skill name=\"history\" />\n      <Skill name=\"insight\" />\n      <Skill name=\"intimidation\" />\n      <Skill name=\"investigation\" />\n      <Skill name=\"medicine\" />\n      <Skill name=\"nature\" />\n      <Skill name=\"perception\" />\n      <Skill name=\"performance\" />\n      <Skill name=\"persuasion\" />\n      <Skill name=\"religion\" />\n      <Skill name=\"sleightOfHand\" />\n      <Skill name=\"stealth\" />\n      <Skill name=\"survival\" />\n      <p>skills</p>\n    </div>\n  )\n}\n\nexport default Skills\n","import { connect, useSelector } from 'react-redux'\nimport { updateCharacter } from '../../characterReducer'\n\nconst LangAndProf = (props) => {\n  const character = useSelector((state) => state)\n\n  const updateCharacter = (event) => {\n    const data = {\n      key: event.target.id,\n      value: event.target.value\n    }\n    props.updateCharacter(data)\n  }\n\n  if (!character.attributes) {\n    return null\n  }\n\n  return (\n    <div id=\"langAndProf\">\n      <div>\n        <label>Proficiencies</label>\n        <textarea\n          id=\"proficiencies\"\n          value={character.attributes.proficiencies}\n          onChange={e => updateCharacter(e)} />\n      </div>\n      <div>\n        <label>Languages</label>\n        <textarea\n          id=\"languages\"\n          value={character.attributes.languages}\n          onChange={e => updateCharacter(e)} />\n      </div>\n      <p>other proficiencies & languages</p>\n    </div>\n  )\n}\n\nconst ConnectedLangAndProf = connect(null, { updateCharacter })(LangAndProf)\n\nexport default ConnectedLangAndProf\n","import React from 'react'\nimport AbilityScoreList from './AbilityScoreList'\nimport SavingThrows from './SavingThrows'\nimport Skills from './Skills'\nimport LangAndProf from './LangAndProf'\nimport './LeftRow.css'\n\nconst LeftRow = () => {\n  return (\n    <div className=\"leftRow\">\n      <div id=\"skills\">\n        <AbilityScoreList />\n        <div id=\"subSkills\">\n          <div className=\"inspiration\">inspiration</div>\n          <div className=\"proficiencyBonus\">proficiency bonus</div>\n          <SavingThrows />\n          <Skills />\n        </div>\n      </div>\n      <div id=\"passiveSkills\"><p>passive skills I think</p></div>\n      <LangAndProf />\n    </div>\n  )\n}\n\nexport default LeftRow\n","import { connect, useSelector } from 'react-redux'\nimport { updateCharacter } from '../../characterReducer'\n\nconst Currency = (props) => {\n  const character = useSelector((state) => state)\n  const name = props.name\n\n  const updateCharacter = (event) => {\n    const data = {\n      key: name,\n      value: event.target.value\n    }\n    props.updateCharacter(data)\n  }\n\n  if (!character.attributes) {\n    return null\n  }\n\n  return (\n    <div className=\"currencyBadge\">\n      <label>{name}</label>\n      <input\n        id={name}\n        type=\"number\"\n        min=\"0\"\n        value={character.attributes[name]}\n        onChange={e => updateCharacter(e)}\n      />\n    </div>\n   )\n}\n\nconst ConnectedCurrency = connect(null, { updateCharacter })(Currency)\n\nexport default ConnectedCurrency\n","import { connect, useSelector } from 'react-redux'\nimport { updateCharacter } from '../../characterReducer'\n\nconst Belongings = (props) => {\n  const character = useSelector((state) => state)\n\n  const updateCharacter = (event) => {\n    const data = {\n      key: \"belongings\",\n      value: event.target.value\n    }\n    props.updateCharacter(data)\n  }\n\n  if (!character.attributes) {\n    return null\n  }\n\n  return (\n    <div>\n      <textarea\n        id=\"belongings\"\n        value={character.attributes.belongings}\n        onChange={e => updateCharacter(e)}\n      />\n    </div>\n   )\n}\n\nconst ConnectedBelongings = connect(null, { updateCharacter })(Belongings)\n\nexport default ConnectedBelongings\n","import Currency from './Currency'\nimport Belongings from './Belongings'\nimport './MiddleRow.css'\n\nconst Equipment = (props) => {\n  return (\n    <div id=\"equipment\">\n      <div id=\"currency\">\n        <div>\n          <Currency name=\"copper\" />\n        </div>\n        <div>\n          <Currency name=\"silver\" />\n        </div>\n        <div>\n          <Currency name=\"electrum\" />\n        </div>\n        <div>\n          <Currency name=\"gold\" />\n        </div>\n        <div>\n          <Currency name=\"platinum\" />\n        </div>\n        <br/>\n      </div>\n      <Belongings />\n      <p id=\"name\">equipment</p>\n    </div>\n  )\n}\n\nexport default Equipment\n","import { connect, useSelector } from 'react-redux'\nimport { updateCharacter } from '../../characterReducer'\n\nconst HitPoint = (props) => {\n  const character = useSelector((state) => state)\n  const label = props.label\n\n  const updateCharacter = (event) => {\n    const data = {\n      key: event.target.className,\n      value: event.target.value\n    }\n    props.updateCharacter(data)\n  }\n\n  if (!character.attributes) {\n    return null\n  }\n\n  return (\n    <div id={label}>\n      <input\n        style={{\n          fontSize: '25px',\n          width: '50px',\n          marginLeft: '20px',\n          border: 'none'\n        }}\n        className={label}\n        type= 'number'\n        value={character.attributes[label] || ''}\n        onChange={e => updateCharacter(e)}\n      />\n      {/* Use lodash to lowerCase label for display?? */}\n      <label>{label}</label>\n    </div>\n   )\n}\n\nconst ConnectedHitPoint = connect(null, { updateCharacter })(HitPoint)\n\nexport default ConnectedHitPoint\n","import React from 'react'\nimport Equipment from './Equipment'\nimport HitPoint from './HitPoint'\nimport './MiddleRow.css'\n\nconst MiddleRow = () => {\n  return (\n    <div className=\"middleRow\">\n      <div id=\"combatInformation\">\n        <div id=\"armorClass\"><p>armor class</p></div>\n        <div id=\"initiative\"><p>initiative</p></div>\n        <div id=\"speed\"><p>speed</p></div>\n        <HitPoint label=\"currentHitPoints\" />\n        <HitPoint label=\"temporaryHitPoints\" />\n        <div id=\"hitDice\"><p>hit dice</p></div>\n        <div id=\"deathSaves\"><p>death saves</p></div>\n      </div>\n      <div id=\"attacksAndSpells\">\n        <p>attacks & spellcasting</p>\n      </div>\n      <Equipment />\n    </div>\n  )\n}\n\nexport default MiddleRow\n","import { connect, useSelector } from 'react-redux'\nimport { updateCharacter } from '../../characterReducer'\n\nconst TextField = (props) => {\n  const character = useSelector((state) => state)\n  const label = props.label\n\n  const updateCharacter = (event) => {\n    const data = {\n      key: event.target.className,\n      value: event.target.value\n    }\n    console.log(data)\n    props.updateCharacter(data)\n  }\n\n  if (!character.attributes) {\n    return null\n  }\n\n  return (\n    <div className=\"hitpoint\">\n      <textarea\n        className={label}\n        value={character.attributes[label]}\n        onChange={e => updateCharacter(e)}\n      />\n      <label>{label}</label>\n    </div>\n   )\n}\n\nconst ConnectedTextField = connect(null, { updateCharacter })(TextField)\n\nexport default ConnectedTextField\n","import React from 'react'\nimport TextField from './TextField'\nimport './RightRow.css'\n\nconst RightRow = () => {\n  return (\n    <div className=\"rightRow\">\n      <div className=\"personalStuff\">\n        <TextField label=\"personalityTraits\" />\n        <TextField label=\"ideals\" />\n        <TextField label=\"bonds\" />\n        <TextField label=\"flaws\" />\n      </div>\n      <div className=\"featuresTraits\">\n        <p>features & traits</p>\n      </div>\n    </div>\n  )\n}\n\nexport default RightRow\n","import React, { useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\n\nimport CharacterOverview from './CharacterOverview'\nimport LeftRow from './leftRow/LeftRow'\nimport MiddleRow from './middleRow/MiddleRow'\nimport RightRow from './rightRow/RightRow'\n\nimport { findCharacter } from '../characterReducer'\n\nconst Character = () => {\n  const { id } = useParams()\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(findCharacter(id))\n  }, [dispatch, id])\n\n  return (\n    <div style={{ height: '1280px' }}>\n      <CharacterOverview />\n      <div style={{\n        display: 'grid',\n        gridTemplateColumns: 'repeat(3, 1fr)',\n        gridColumnGap: '10px',\n        height: '100%',\n        margin: '40px',\n        marginTop: 0\n      }} className=\"rowContainer\">\n        <LeftRow />\n        <MiddleRow />\n        <RightRow />\n      </div>\n    </div>\n  )\n}\n\nexport default Character\n","import React from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route } from 'react-router-dom'\nimport LandingPage from './LandingPage'\nimport Character from './Character'\n\nconst App = () => {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path='/'>\n            <LandingPage />\n          </Route>\n          <Route path='/characters/:id'>\n            <Character />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App\n","import { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport reducer from './characterReducer'\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n)\n\nexport default store\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}