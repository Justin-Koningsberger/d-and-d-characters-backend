{"version":3,"sources":["components/LandingPage.js","characterService.js","characterReducer.js","components/CharacterOverview.js","components/leftRow/AbilityScores.js","components/leftRow/SavingThrows.js","components/leftRow/Skills.js","components/leftRow/LeftRow.js","components/MiddleRow.js","components/RightRow.js","components/Character.js","components/App.js","store.js","index.js"],"names":["LandingPage","style","textAlign","paddingTop","history","useHistory","useState","name","setName","onSubmit","event","a","preventDefault","axios","post","resp","id","data","push","console","log","message","className","value","onChange","target","type","baseUrl","getCharacter","get","response","saveCharacter","character","put","updateCharacter","dispatch","payload","reducer","state","action","key","updatedAttributes","Object","defineProperty","attributes","writable","enumerable","configurable","newState","ConnectedCharacterOverview","connect","props","useSelector","paddingLeft","onClick","charClass","e","charRace","htmlFor","charAlign","charBackground","min","charExperience","ConnectedAbilityScores","strength","dexterity","constitution","intelligence","wisdom","charisma","SavingThrows","Skills","LeftRow","MiddleRow","RightRow","Character","useParams","useDispatch","useEffect","findCharacter","height","display","gridTemplateColumns","margin","marginTop","App","exact","path","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0fefaba8.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport axios from 'axios'\nimport { useHistory } from 'react-router-dom'\n\nconst LandingPage = () => {\n  const style = {\n    textAlign: \"center\",\n    paddingTop: \"50px\",\n  }\n\n  const baseUrl = '/api/characters'\n  const history = useHistory()\n\n  const [name, setName] = useState('')\n\n  const handleNameChange = (event) => setName(event.target.value)\n\n  const onSubmit = async (event) => {\n    event.preventDefault()\n\n    try {\n      const resp = await axios.post(baseUrl, { name: name })\n      const id = resp.data.id\n      setName('')\n      history.push(`/characters/${id}`)\n\n    }\n    catch (error) {\n      console.log(\"Error: \", error.message)\n    }\n  }\n\n  return (\n    <div>\n      <header className=\"Landing page\" >\n        <h2 style={style}>Create a new character</h2>\n      </header>\n      <div>\n        <form style={style} className=\"Character name\" onSubmit={onSubmit}>\n          <label>\n            Enter a name for your character\n            <input value={name} onChange={handleNameChange} />\n          </label>\n          <button type=\"submit\">add</button>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default LandingPage\n","import axios from 'axios'\n\nconst baseUrl = '/api/characters'\n\nexport const getCharacter = async (id) => {\n  try {\n    const response = await axios.get(`${baseUrl}/${id}`)\n\n    return response.data\n  }\n  catch (e) {\n    // If status is 400, character id is most likely wrong\n    console.log('error retrieving character', e)\n  }\n}\n\nexport const saveCharacter = async (character) => {\n  try {\n    const id = character.id\n    const response = axios.put(`${baseUrl}/${id}`, character)\n\n    return response.data\n  }\n  catch (e) {\n    console.log('error saving character', e)\n  }\n}\n\nexport default { getCharacter, saveCharacter }\n","import { getCharacter } from './characterService'\n\nexport const findCharacter = (id) => {\n  return async dispatch => {\n    const character = await getCharacter(id)\n    dispatch({\n      type: 'GET_CHARACTER',\n      payload: character\n    })\n  }\n}\n\nexport const updateCharacter = (data) => {\n  return async dispatch => {\n    dispatch({\n      type: 'UPDATE_CHARACTER',\n      payload: data\n    })\n  }\n}\n\nconst reducer = (state = {}, action) => {\n  // console.log('reducer-state now: ', state)\n  // console.log('reducer-action', action)\n  switch (action.type) {\n    case 'GET_CHARACTER':\n      return action.payload\n    case 'UPDATE_CHARACTER':\n      const key = action.payload.key\n      const value = action.payload.value\n      // Most likely can clean this up later\n      const updatedAttributes = Object.defineProperty(state.attributes, key, {\n        value: value,\n        writable: true,\n        enumerable: true,\n        configurable: true\n      })\n      const newState = { ...state, attributes: updatedAttributes }\n\n      return newState\n    default:\n      return state\n  }\n}\n\nexport default reducer\n","import React from 'react'\nimport { connect, useSelector } from 'react-redux'\nimport { updateCharacter } from '../characterReducer'\nimport { saveCharacter } from '../characterService'\nimport './CharacterOverview.css'\n\nconst CharacterOverview = (props) => {\n  const character = useSelector((state) => state)\n\n  const updateCharacter = (event) => {\n    const data = { key: event.target.className, value: event.target.value }\n    props.updateCharacter(data)\n  }\n\n  if (!character.attributes) {\n    return null\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"characterName\">\n        <p style={{ paddingLeft: '10px'}}>\n          {character.name}\n        </p>\n        <label>\n          character name\n        </label>\n        <button onClick={() => saveCharacter(character)}>save</button>\n      </div>\n      <div className=\"characterOverview\">\n        <div className=\"row\">\n          <div>\n            <input\n              className=\"charClass\"\n              value={character.attributes.charClass}\n              onChange={e => updateCharacter(e)}>\n            </input>\n            <label>class and level</label>\n          </div>\n          <div>\n            <input\n              className=\"charRace\"\n              value={character.attributes.charRace}\n              onChange={e => updateCharacter(e)}>\n            </input>\n            <label htmlFor=\"charRace\">race</label>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div>\n            <input\n              className=\"charAlign\"\n              value={character.attributes.charAlign}\n              onChange={e => updateCharacter(e)}>\n            </input>\n            <label>alignment</label>\n          </div>\n          <div>\n            <input\n              className=\"charBackground\"\n              value={character.attributes.charBackground}\n              onChange={e => updateCharacter(e)}>\n            </input>\n            <label>background</label>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div>\n            <input\n              type=\"number\"\n              min=\"0\"\n              className=\"charExperience\"\n              value={character.attributes.charExperience}\n              onChange={e => updateCharacter(e)}>\n            </input>\n            <label>experience points</label>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst ConnectedCharacterOverview = connect(null, { updateCharacter })(CharacterOverview)\n\nexport default ConnectedCharacterOverview\n","import React from 'react'\nimport { connect, useSelector } from 'react-redux'\nimport { updateCharacter } from '../../characterReducer'\nimport './AbilityScores.css'\n\nconst AbilityScores = (props) => {\n  const character = useSelector((state) => state)\n\n  const updateCharacter = (event) => {\n    const data = { key: event.target.id, value: event.target.value }\n    props.updateCharacter(data)\n  }\n\n  if (!character.attributes) {\n    return null\n  }\n\n  return (\n    <div id=\"abilityScores\">\n      {/* TODO - For sure make components out of these elements\n          when I settle on a style */}\n      <div>\n        <input\n          type=\"number\"\n          value={character.attributes.strength}\n          onChange={e => updateCharacter(e)}\n          id=\"strength\"></input>\n        <label>strength</label>\n      </div>\n      <div>\n        <input\n          type=\"number\"\n          value={character.attributes.dexterity}\n          onChange={e => updateCharacter(e)}\n          id=\"dexterity\"></input>\n        <label>dexterity</label>\n      </div>\n      <div>\n        <input\n          type=\"number\"\n          value={character.attributes.constitution}\n          onChange={e => updateCharacter(e)}\n          id=\"constitution\"></input>\n        <label>constitution</label>\n      </div>\n      <div>\n        <input\n          type=\"number\"\n          value={character.attributes.intelligence}\n          onChange={e => updateCharacter(e)}\n          id=\"intelligence\"></input>\n        <label>intelligence</label>\n      </div>\n      <div>\n        <input\n          type=\"number\"\n          value={character.attributes.wisdom}\n          onChange={e => updateCharacter(e)}\n          id=\"wisdom\"></input>\n        <label>wisdom</label>\n      </div>\n      <div>\n        <input\n          type=\"number\"\n          value={character.attributes.charisma}\n          onChange={e => updateCharacter(e)}\n          id=\"charisma\"></input>\n        <label>charisma</label>\n      </div>\n    </div>\n  )\n}\n\nconst ConnectedAbilityScores = connect(null, { updateCharacter })(AbilityScores)\n\nexport default ConnectedAbilityScores\n","import React from 'react'\nimport './SavingThrows.css'\n\nconst SavingThrows = () => {\n  // I think all these values need to be calculated from character attributes\n  // Also these will be sub components, shared with Skills\n  return (\n    <div className=\"savingThrows\">\n      <div id=\"strength\">\n        <input></input>\n        strength\n      </div>\n      <div id=\"dexterity\">\n        <input></input>\n        Dexterity\n      </div>\n      <div id=\"constitution\">\n        <input></input>\n        Constitution\n      </div>\n      <div id=\"intelligence\">\n        <input></input>\n        Intelligence\n      </div>\n      <div id=\"wisdom\">\n        <input></input>\n        Wisdom\n      </div>\n      <div id=\"charisma\">\n        <input></input>\n        Charisma\n      </div>\n      savingThrows (no state yet)\n    </div>\n  )\n}\n\nexport default SavingThrows\n","import React from 'react'\n\nconst Skills = () => {\n  return (\n    <div className=\"skills\">\n      More coming!!\n      {/* These will be sub components, shared with SavingThrows */}\n      <div id=\"acrobatics\">\n        <input></input>\n        <label>Acrobatics</label>\n      </div>\n      <div id=\"animalHandling\">\n        <input></input>\n        <label>Animal handling</label>\n      </div>\n      <div id=\"arcana\">\n        <input></input>\n        <label>Arcana</label>\n      </div>\n      skills (no state yet)\n    </div>\n  )\n}\n\nexport default Skills\n","import React from 'react'\nimport AbilityScores from './AbilityScores'\nimport SavingThrows from './SavingThrows'\nimport Skills from './Skills'\nimport './LeftRow.css'\n\nconst LeftRow = () => {\n  return (\n    <div className=\"leftRow\">\n      <div id=\"skills\">\n        <AbilityScores />\n        <div id=\"subSkills\">\n          <div className=\"inspiration\">inspiration</div>\n          <div className=\"proficiencyBonus\">proficiency bonus</div>\n          <SavingThrows />\n          <Skills />\n        </div>\n      </div>\n      <div id=\"passiveSkills\">passive skills I think</div>\n      <div id=\"langAndProf\">languages & proficiencies</div>\n    </div>\n  )\n}\n\nexport default LeftRow\n","import React from 'react'\nimport './MiddleRow.css'\n\nconst MiddleRow = () => {\n  return (\n    <div className=\"middleRow\">\n      <div id=\"hackyStuff\">\n        <div id=\"combatInformation1\">\n          combat information\n          <div id=\"div1\"></div>\n          <div id=\"div2\"></div>\n          <div id=\"div3\"></div>\n          <div id=\"div4\"></div>\n          <div id=\"div5\"></div>\n        </div>\n        <div id=\"combatInformation2\">\n          <div id=\"hitDice\">hit dice</div>\n          <div id=\"deathSaves\">death saves</div>\n        </div>\n      </div>\n      <div id=\"attacksAndSpells\">\n        attacks & spellcasting\n      </div>\n      <div id=\"equipment\">equipment</div>\n    </div>\n  )\n}\n\nexport default MiddleRow\n","import React from 'react'\nimport './RightRow.css'\n\nconst RightRow = () => {\n  return (\n    <div className=\"rightRow\">\n      <div id=\"personalStuff\">\n        <div id=\"personalityTraits\">personality traits</div>\n        <div id=\"ideals\">ideals</div>\n        <div id=\"bonds\">bonds</div>\n        <div id=\"flaws\">flaws</div>\n      </div>\n      <div id=\"featuresTraits\">\n        features & traits\n      </div>\n    </div>\n  )\n}\n\nexport default RightRow\n","import React, { useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\n\nimport CharacterOverview from './CharacterOverview'\nimport LeftRow from './leftRow/LeftRow'\nimport MiddleRow from './MiddleRow'\nimport RightRow from './RightRow'\n\nimport { findCharacter } from '../characterReducer'\n\nconst Character = () => {\n  const { id } = useParams()\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(findCharacter(id))\n  }, [dispatch, id])\n\n  return (\n    <div style={{ height: '1280px' }}>\n      <CharacterOverview />\n      <div style={{\n        display: 'grid',\n        gridTemplateColumns: 'repeat(3, 1fr)',\n        height: '100%',\n        margin: '40px',\n        marginTop: 0\n      }} className=\"rowContainer\">\n        <LeftRow />\n        <MiddleRow />\n        <RightRow />\n      </div>\n    </div>\n  )\n}\n\nexport default Character\n","import React from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route } from 'react-router-dom'\nimport LandingPage from './LandingPage'\nimport Character from './Character'\n\nconst App = () => {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path='/'>\n            <LandingPage />\n          </Route>\n          <Route path='/characters/:id'>\n            <Character />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App\n","import { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport reducer from './characterReducer'\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n)\n\nexport default store\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}