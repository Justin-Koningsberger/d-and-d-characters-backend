{"version":3,"sources":["characterService.js","components/middleRow/DeathSaves.js","components/leftRow/Skill.js","characterReducer.js","components/LandingPage.js","components/CharacterOverview.js","components/leftRow/AbilityScore.js","utilities.js","components/leftRow/AbilityScoreList.js","components/leftRow/SavingThrows.js","components/leftRow/Skills.js","components/leftRow/LangAndProf.js","components/NumberField.js","components/TextField.js","components/leftRow/LeftRow.js","components/middleRow/Currency.js","components/middleRow/Belongings.js","components/middleRow/Equipment.js","components/middleRow/Weapon.js","components/middleRow/MiddleRow.js","components/rightRow/RightRow.js","components/Character.js","components/App.js","store.js","index.js"],"names":["baseUrl","getCharacter","id","a","axios","get","response","data","console","log","error","saveCharacter","character","put","DeathSaves","props","useSelector","state","updateCharacter","event","key","target","className","value","checked","inputChecked","name","undefined","attributes","eval","type","defaultChecked","onClick","e","ConnectedDeathSaves","connect","Skill","skillName","skillLabel","label","skillChecked","concat","toString","skillScore","onChange","ConnectedSkill","findCharacter","dispatch","payload","updateWeapon","reducer","action","newState","newWeaponState","weapons","index","LandingPage","style","textAlign","paddingTop","history","useHistory","useState","setName","onSubmit","preventDefault","post","resp","push","message","ConnectedCharacterOverview","charClass","charRace","charAlign","charBackground","min","charExperience","ConnectedAbilityScore","maybeNumber","abilityName","abilityScore","modifier","Math","floor","isNaN","sign","AbilityScoreList","SavingThrows","Skills","ConnectedLangAndProf","proficiencies","languages","ConnectedNumberField","ConnectedTextField","LeftRow","ConnectedCurrency","ConnectedBelongings","belongings","Equipment","ConnectedWeapon","width","bonus","damage","MiddleRow","RightRow","Character","useParams","useDispatch","useEffect","navigator","userAgentData","mobile","alert","display","flexWrap","margin","marginTop","App","exact","path","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAEMA,EAAU,kBAEHC,EAAY,uCAAG,WAAOC,GAAP,eAAAC,EAAA,+EAEDC,IAAMC,IAAN,UAAaL,EAAb,YAAwBE,IAFvB,cAElBI,EAFkB,yBAIjBA,EAASC,MAJQ,gCAOxBC,QAAQC,IAAI,uBAAwB,KAAEH,SAASC,KAAKG,OAP5B,yDAAH,sDAWZC,EAAa,uCAAG,WAAOC,GAAP,iBAAAT,EAAA,sEAEnBD,EAAKU,EAAUV,GACfI,EAAWF,IAAMS,IAAN,UAAab,EAAb,YAAwBE,GAAMU,GAHtB,kBAKlBN,EAASC,MALS,gCAQzBC,QAAQC,IAAI,yBAAZ,MARyB,wDAAH,uD,mHCf1B,6UAGMK,WAAa,SAAbA,WAAcC,OAClB,IAAMH,UAAYI,oDAAY,SAACC,GAAD,OAAWA,KAEnCC,gBAAkB,SAACC,GACvB,IAAMZ,EAAO,CACXa,IAAKD,EAAME,OAAOC,UAClBC,MAAOJ,EAAME,OAAOG,SAEtBT,MAAMG,gBAAgBX,IAGlBkB,aAAe,SAAfA,aAAgBC,MACpB,YAAmCC,IAA/Bf,UAAUgB,WAAWF,OAMhBG,KAAKjB,UAAUgB,WAAWF,QAIrC,OACE,mEAAKJ,UAAU,aAAf,UACE,6EACE,2FACA,oEACEA,UAAU,QACVQ,KAAK,WACLC,eAAgBN,aAAa,SAC7BO,QAAS,SAAAC,GAAC,OAAIf,gBAAgBe,MAEhC,oEACEX,UAAU,QACVQ,KAAK,WACLC,eAAgBN,aAAa,SAC7BO,QAAS,SAAAC,GAAC,OAAIf,gBAAgBe,MAEhC,oEACEX,UAAU,QACVQ,KAAK,WACLC,eAAgBN,aAAa,SAC7BO,QAAS,SAAAC,GAAC,OAAIf,gBAAgBe,SAGlC,6EACE,0FACA,oEACEX,UAAU,QACVQ,KAAK,WACLC,eAAgBN,aAAa,SAC7BO,QAAS,SAAAC,GAAC,OAAIf,gBAAgBe,MAEhC,oEACEX,UAAU,QACVQ,KAAK,WACLC,eAAgBN,aAAa,SAC7BO,QAAS,SAAAC,GAAC,OAAIf,gBAAgBe,MAEhC,oEACEX,UAAU,QACVQ,KAAK,WACLC,eAAgBN,aAAa,SAC7BO,QAAS,SAAAC,GAAC,OAAIf,gBAAgBe,SAGlC,iGAKAC,oBAAsBC,mDAAQ,KAAM,CAAEjB,kEAAhBiB,CAAmCrB,YAEhDoB,2C,wEC5Ef,kgBAIME,MAAQ,SAARA,MAASrB,OACb,IAAMH,UAAYI,oDAAY,SAACC,GAAD,OAAWA,KACnCoB,UAAYtB,MAAMW,KAClBY,WAAavB,MAAMwB,MACnBC,aAAeH,UAAUI,OAAO,WAEhCvB,gBAAkB,SAACC,GACvB,IAAIZ,EAEFA,EADEY,EAAME,OAAOnB,KAAOmC,UACf,CACLjB,IAAKiB,UACLd,MAAOJ,EAAME,OAAOE,OAIf,CACLH,IAAKoB,aACLjB,MAAOJ,EAAME,OAAOG,QAAQkB,YAGhC3B,MAAMG,gBAAgBX,IAGlBoC,WAAa/B,UAAUgB,WAAWS,WAGlCZ,kBAAsDE,IAAvCf,UAAUgB,WAAWY,eAGtCX,KAAKjB,UAAUgB,WAAWY,eAE9B,OACE,mEAAKtC,GAAImC,UAAT,UACE,oEACEf,UAAU,gBACVpB,GAAIsC,aACJV,KAAK,WACLC,eAAgBN,aAChBO,QAAS,SAAAC,GAAC,OAAIf,gBAAgBe,MAEhC,oEACEX,UAAU,aACVpB,GAAImC,UACJP,KAAK,SACLP,MAAOoB,YAAc,GACrBC,SAAU,SAAAX,GAAC,OAAIf,gBAAgBe,MAEjC,6EAAQK,iBAKRO,eAAiBV,mDAAQ,KAAM,CAAEjB,kEAAhBiB,CAAmCC,OAE3CS,sC,iLCxDFC,EAAgB,SAAC5C,GAC5B,8CAAO,WAAM6C,GAAN,eAAA5C,EAAA,sEACmBF,YAAaC,GADhC,OACCU,EADD,OAELmC,EAAS,CACPjB,KAAM,gBACNkB,QAASpC,IAJN,2CAAP,uDASWM,EAAkB,SAACX,GAC9B,8CAAO,WAAMwC,GAAN,SAAA5C,EAAA,sDACL4C,EAAS,CACPjB,KAAM,mBACNkB,QAASzC,IAHN,2CAAP,uDAQW0C,EAAe,SAAC1C,GAC3B,8CAAO,WAAMwC,GAAN,SAAA5C,EAAA,sDACL4C,EAAS,CACPjB,KAAM,gBACNkB,QAASzC,IAHN,2CAAP,uDA6Ba2C,IArBC,WAAyB,IAAxBjC,EAAuB,uDAAf,GAAIkC,EAAW,uCACtC,OAAQA,EAAOrB,MACb,IAAK,gBACH,OAAOqB,EAAOH,QAChB,IAAK,mBACH,IAAM5B,EAAM+B,EAAOH,QAAQ5B,IACrBG,EAAQ4B,EAAOH,QAAQzB,MACvB6B,EAAQ,eAAOnC,GAGrB,OAFAmC,EAASxB,WAAWR,GAAOG,EAEpB6B,EACT,IAAK,gBACH,IAAMC,EAAc,eAAOpC,GAG3B,OAFAoC,EAAeC,QAAQH,EAAOH,QAAQO,OAAOJ,EAAOH,QAAQ5B,KAAO+B,EAAOH,QAAQzB,MAE3E8B,EACT,QACE,OAAOpC,K,8OCGEuC,EA9CK,WAClB,IAAMC,EAAQ,CACZC,UAAW,SACXC,WAAY,QAIRC,EAAUC,cAEhB,EAAwBC,mBAAS,IAAjC,mBAAOpC,EAAP,KAAaqC,EAAb,KAIMC,EAAQ,uCAAG,WAAO7C,GAAP,iBAAAhB,EAAA,6DACfgB,EAAM8C,iBADS,kBAIM7D,IAAM8D,KAXb,kBAW2B,CAAExC,KAAMA,IAJlC,OAIPyC,EAJO,OAKPjE,EAAKiE,EAAK5D,KAAKL,GACrB6D,EAAQ,IACRH,EAAQQ,KAAR,sBAA4BlE,IAPf,kDAWbM,QAAQC,IAAI,UAAW,KAAM4D,SAXhB,0DAAH,sDAed,OACE,gCACE,wBAAQ/C,UAAU,eAAlB,SACE,oBAAImC,MAAOA,EAAX,sCAEF,8BACE,uBAAMA,MAAOA,EAAOnC,UAAU,iBAAiB0C,SAAUA,EAAzD,UACE,oEAEE,uBAAOzC,MAAOG,EAAMkB,SA1BL,SAACzB,GAAD,OAAW4C,EAAQ5C,EAAME,OAAOE,aA4BjD,wBAAQO,KAAK,SAAb,0B,eCgCKwC,G,MAFoBnC,YAAQ,KAAM,CAAEjB,qBAAhBiB,EAnET,SAACpB,GACzB,IAAMH,EAAYI,aAAY,SAACC,GAAD,OAAWA,KAEnCC,EAAkB,SAACC,GACvB,IAAMZ,EAAO,CAAEa,IAAKD,EAAME,OAAOC,UAAWC,MAAOJ,EAAME,OAAOE,OAChER,EAAMG,gBAAgBX,IAGxB,OACE,sBAAKe,UAAU,YAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,4BACGV,EAAUc,OAEb,mDAGA,wBAAQM,QAAS,kBAAMrB,YAAcC,IAArC,qBAEF,sBAAKU,UAAU,oBAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,uBACEA,UAAU,YACVC,MAAOX,EAAUgB,WAAW2C,UAC5B3B,SAAU,SAAAX,GAAC,OAAIf,EAAgBe,MAEjC,uDAEF,sBAAKX,UAAU,eAAf,UACE,uBACEA,UAAU,WACVC,MAAOX,EAAUgB,WAAW4C,SAC5B5B,SAAU,SAAAX,GAAC,OAAIf,EAAgBe,MAEjC,4CAEF,sBAAKX,UAAU,oBAAf,UACE,uBACEA,UAAU,YACVC,MAAOX,EAAUgB,WAAW6C,UAC5B7B,SAAU,SAAAX,GAAC,OAAIf,EAAgBe,MAEjC,iDAEF,sBAAKX,UAAU,qBAAf,UACE,uBACEA,UAAU,iBACVC,MAAOX,EAAUgB,WAAW8C,eAC5B9B,SAAU,SAAAX,GAAC,OAAIf,EAAgBe,MAEjC,kDAEF,sBAAKX,UAAU,qBAAf,UACE,uBACEA,UAAU,iBACVQ,KAAK,SACL6C,IAAI,IACJpD,MAAOX,EAAUgB,WAAWgD,eAC5BhC,SAAU,SAAAX,GAAC,OAAIf,EAAgBe,MAEjC,mEC7BK4C,EAFe1C,YAAQ,KAAM,CAAEjB,qBAAhBiB,EA/BT,SAACpB,GACpB,ICL2B+D,EDKrBlE,EAAYI,aAAY,SAACC,GAAD,OAAWA,KACnC8D,EAAchE,EAAMW,KAOpBsD,EAAepE,EAAUgB,WAAWmD,GACpCE,EAAWC,KAAKC,OAAOH,EAAa,IAAI,GAE9C,OACE,sBAAK1D,UAAU,eAAf,UACE,mBAAGA,UAAU,OAAb,SAAqByD,IACrB,qBAAKzD,UAAU,WAAf,UCnBuBwD,EDoBPG,EClBhBG,MAAMN,GACO,GAGAI,KAAKG,KAAKP,GAAe,EAAIA,EAA7B,WAA+CA,MDgB5D,8BACE,uBACExD,UAAU,QACVQ,KAAK,SACL6C,IAAI,IACJpD,MAAOyD,GAAgB,GACvBpC,SAAU,SAAAX,GAAC,OApBK,SAACd,GACvB,IAAMZ,EAAO,CAAEa,IAAK2D,EAAaxD,MAAOJ,EAAME,OAAOE,OACrDR,EAAMG,gBAAgBX,GAkBDW,CAAgBe,cEX1BqD,G,MAbU,SAACvE,GACxB,OACE,sBAAKb,GAAG,mBAAR,UACE,cAAC,EAAD,CAAcwB,KAAK,aACnB,cAAC,EAAD,CAAcA,KAAK,cACnB,cAAC,EAAD,CAAcA,KAAK,iBACnB,cAAC,EAAD,CAAcA,KAAK,iBACnB,cAAC,EAAD,CAAcA,KAAK,WACnB,cAAC,EAAD,CAAcA,KAAK,kB,OCMV6D,G,MAdM,WACnB,OACE,sBAAKjE,UAAU,eAAf,UACE,cAACc,EAAA,EAAD,CAAOV,KAAK,aAAaa,MAAM,aAC/B,cAACH,EAAA,EAAD,CAAOV,KAAK,cAAca,MAAM,cAChC,cAACH,EAAA,EAAD,CAAOV,KAAK,iBAAiBa,MAAM,iBACnC,cAACH,EAAA,EAAD,CAAOV,KAAK,iBAAiBa,MAAM,iBACnC,cAACH,EAAA,EAAD,CAAOV,KAAK,WAAWa,MAAM,WAC7B,cAACH,EAAA,EAAD,CAAOV,KAAK,aAAaa,MAAM,aAC/B,mDCgBSiD,EA1BA,WACb,OACE,sBAAKlE,UAAU,SAAf,UACE,cAACc,EAAA,EAAD,CAAOV,KAAK,aAAaa,MAAM,eAC/B,cAACH,EAAA,EAAD,CAAOV,KAAK,iBAAiBa,MAAM,oBACnC,cAACH,EAAA,EAAD,CAAOV,KAAK,SAASa,MAAM,WAC3B,cAACH,EAAA,EAAD,CAAOV,KAAK,YAAYa,MAAM,cAC9B,cAACH,EAAA,EAAD,CAAOV,KAAK,YAAYa,MAAM,cAC9B,cAACH,EAAA,EAAD,CAAOV,KAAK,UAAUa,MAAM,YAC5B,cAACH,EAAA,EAAD,CAAOV,KAAK,UAAUa,MAAM,YAC5B,cAACH,EAAA,EAAD,CAAOV,KAAK,eAAea,MAAM,iBACjC,cAACH,EAAA,EAAD,CAAOV,KAAK,gBAAgBa,MAAM,kBAClC,cAACH,EAAA,EAAD,CAAOV,KAAK,WAAWa,MAAM,aAC7B,cAACH,EAAA,EAAD,CAAOV,KAAK,SAASa,MAAM,WAC3B,cAACH,EAAA,EAAD,CAAOV,KAAK,aAAaa,MAAM,eAC/B,cAACH,EAAA,EAAD,CAAOV,KAAK,cAAca,MAAM,gBAChC,cAACH,EAAA,EAAD,CAAOV,KAAK,aAAaa,MAAM,eAC/B,cAACH,EAAA,EAAD,CAAOV,KAAK,WAAWa,MAAM,aAC7B,cAACH,EAAA,EAAD,CAAOV,KAAK,gBAAgBa,MAAM,oBAClC,cAACH,EAAA,EAAD,CAAOV,KAAK,UAAUa,MAAM,YAC5B,cAACH,EAAA,EAAD,CAAOV,KAAK,WAAWa,MAAM,aAC7B,2CCaSkD,EAFctD,YAAQ,KAAM,CAAEjB,qBAAhBiB,EAhCT,SAACpB,GACnB,IAAMH,EAAYI,aAAY,SAACC,GAAD,OAAWA,KAEnCC,EAAkB,SAACC,GACvB,IAAMZ,EAAO,CACXa,IAAKD,EAAME,OAAOnB,GAClBqB,MAAOJ,EAAME,OAAOE,OAEtBR,EAAMG,gBAAgBX,IAGxB,OACE,sBAAKe,UAAU,cAAf,UACE,gCACE,kDACA,0BACEA,UAAU,gBACVC,MAAOX,EAAUgB,WAAW8D,cAC5B9C,SAAU,SAAAX,GAAC,OAAIf,EAAgBe,SAEnC,gCACE,8CACA,0BACEX,UAAU,YACVC,MAAOX,EAAUgB,WAAW+D,UAC5B/C,SAAU,SAAAX,GAAC,OAAIf,EAAgBe,SAEnC,sECAS2D,EAFczD,YAAQ,KAAM,CAAEjB,qBAAhBiB,EAzBT,SAACpB,GACnB,IAAMH,EAAYI,aAAY,SAACC,GAAD,OAAWA,KACnCsB,EAAQxB,EAAMwB,MACdb,EAAOX,EAAMW,KAUnB,OACE,sBAAKJ,UAAWI,EAAhB,UACE,uBACEI,KAAM,SACNP,MAAOX,EAAUgB,WAAWF,IAAS,GACrCkB,SAAU,SAAAX,GAAC,OAbO,SAACd,GACvB,IAAMZ,EAAO,CACXa,IAAKM,EACLH,MAAOJ,EAAME,OAAOE,OAEtBR,EAAMG,gBAAgBX,GAQHW,CAAgBe,MAEjC,gCAAQM,UCMCsD,EAFY1D,YAAQ,KAAM,CAAEjB,qBAAhBiB,EAxBT,SAACpB,GACjB,IAAMH,EAAYI,aAAY,SAACC,GAAD,OAAWA,KACnCsB,EAAQxB,EAAMwB,MACdb,EAAOX,EAAMW,KAUnB,OACE,sBAAKJ,UAAWI,EAAhB,UACE,0BACEH,MAAOX,EAAUgB,WAAWF,IAAS,GACrCkB,SAAU,SAAAX,GAAC,OAZO,SAACd,GACvB,IAAMZ,EAAO,CACXa,IAAKM,EACLH,MAAOJ,EAAME,OAAOE,OAEtBR,EAAMG,gBAAgBX,GAOHW,CAAgBe,MAEjC,gCAAQM,UCQCuD,G,MArBC,WACd,OACE,sBAAKxE,UAAU,kBAAf,UACE,sBAAKpB,GAAG,SAAR,UACE,cAAC,EAAD,IACA,sBAAKA,GAAG,YAAR,UACE,cAAC,EAAD,CAAawB,KAAK,cAAca,MAAM,gBACtC,cAAC,EAAD,CAAab,KAAK,mBAAmBa,MAAM,sBAC3C,cAAC,EAAD,IACA,cAAC,EAAD,UAGJ,sBAAKrC,GAAG,gBAAR,UACE,cAAC,EAAD,CAAaqC,MAAM,GAAGb,KAAK,sBAC3B,cAAC,EAAD,CAAWa,MAAM,GAAGb,KAAK,oBAE3B,cAAC,EAAD,SCMSqE,EAFW5D,YAAQ,KAAM,CAAEjB,qBAAhBiB,EA1BT,SAACpB,GAChB,IAAMH,EAAYI,aAAY,SAACC,GAAD,OAAWA,KACnCS,EAAOX,EAAMW,KAUnB,OACE,sBAAKJ,UAAU,gBAAf,UACE,gCAAQI,IACR,uBACExB,GAAIwB,EACJI,KAAK,SACL6C,IAAI,IACJpD,MAAOX,EAAUgB,WAAWF,IAAS,GACrCkB,SAAU,SAAAX,GAAC,OAhBO,SAACd,GACvB,IAAMZ,EAAO,CACXa,IAAKM,EACLH,MAAOJ,EAAME,OAAOE,OAEtBR,EAAMG,gBAAgBX,GAWHW,CAAgBe,YCIxB+D,EAFa7D,YAAQ,KAAM,CAAEjB,qBAAhBiB,EAtBT,SAACpB,GAClB,IAAMH,EAAYI,aAAY,SAACC,GAAD,OAAWA,KAUzC,OACE,8BACE,0BACEf,GAAG,aACHqB,MAAOX,EAAUgB,WAAWqE,WAC5BrD,SAAU,SAAAX,GAAC,OAbO,SAACd,GACvB,IAAMZ,EAAO,CACXa,IAAK,aACLG,MAAOJ,EAAME,OAAOE,OAEtBR,EAAMG,gBAAgBX,GAQHW,CAAgBe,WCYxBiE,G,MA3BG,SAACnF,GACjB,OACE,sBAAKb,GAAG,YAAR,UACE,sBAAKA,GAAG,WAAR,UACE,8BACE,cAAC,EAAD,CAAUwB,KAAK,aAEjB,8BACE,cAAC,EAAD,CAAUA,KAAK,aAEjB,8BACE,cAAC,EAAD,CAAUA,KAAK,eAEjB,8BACE,cAAC,EAAD,CAAUA,KAAK,WAEjB,8BACE,cAAC,EAAD,CAAUA,KAAK,eAEjB,0BAEF,cAAC,EAAD,IACA,mBAAGxB,GAAG,OAAN,4B,QCgBSiG,EAFShE,YAAQ,KAAM,CAAEc,kBAAhBd,EArCT,SAACpB,GACd,IAAMH,EAAYI,aAAY,SAACC,GAAD,OAAWA,KACnCsC,EAAQxC,EAAMwC,MAEdN,EAAe,SAAC9B,GACpB,IAAMZ,EAAO,CACXgD,MAAOA,EACPnC,IAAKD,EAAME,OAAOC,UAClBC,MAAOJ,EAAME,OAAOE,OAEtBR,EAAMkC,aAAa1C,IAGrB,OACE,sBAAKe,UAAU,SAAf,UACE,0BACEA,UAAU,OACVC,MAAOX,EAAU0C,QAAQC,GAAO7B,MAAQ,GACxCkB,SAAU,SAAAX,GAAC,OAAIgB,EAAahB,MAE9B,uBACEX,UAAU,QACVmC,MAAO,CAAC2C,MAAO,OAAQ1C,UAAW,UAClC5B,KAAK,SACLP,MAAOX,EAAU0C,QAAQC,GAAO8C,OAAS,GACzCzD,SAAU,SAAAX,GAAC,OAAIgB,EAAahB,MAG9B,0BACEX,UAAU,SACVC,MAAOX,EAAU0C,QAAQC,GAAO+C,QAAU,GAC1C1D,SAAU,SAAAX,GAAC,OAAIgB,EAAahB,YCJrBsE,EAtBG,WAChB,OACE,sBAAKjF,UAAU,oBAAf,UACE,sBAAKpB,GAAG,oBAAR,UACE,cAAC,EAAD,CAAaqC,MAAM,cAAcb,KAAK,eACtC,cAAC,EAAD,CAAaa,MAAM,aAAab,KAAK,eACrC,cAAC,EAAD,CAAaa,MAAM,QAAQb,KAAK,UAChC,cAAC,EAAD,CAAaa,MAAM,qBAAqBb,KAAK,qBAC7C,cAAC,EAAD,CAAaa,MAAM,uBAAuBb,KAAK,uBAC/C,cAAC,EAAD,CAAWa,MAAM,WAAWb,KAAK,YACjC,cAACZ,EAAA,EAAD,OAEF,sBAAKQ,UAAU,mBAAf,UACE,cAAC,EAAD,CAAQiC,MAAO,IACf,cAAC,EAAD,CAAQA,MAAO,IACf,cAAC,EAAD,CAAQA,MAAO,OAEjB,cAAC,EAAD,QCLSiD,G,MAhBE,WACf,OACE,sBAAKlF,UAAU,mBAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,cAAC,EAAD,CAAWI,KAAK,oBAAoBa,MAAM,uBAC1C,cAAC,EAAD,CAAWb,KAAK,SAASa,MAAM,WAC/B,cAAC,EAAD,CAAWb,KAAK,QAAQa,MAAM,UAC9B,cAAC,EAAD,CAAWb,KAAK,QAAQa,MAAM,aAEhC,qBAAKjB,UAAU,iBAAf,SACE,cAAC,EAAD,CAAWI,KAAK,cAAca,MAAM,6BCkC7BkE,EArCG,WAChB,IAAQvG,EAAOwG,cAAPxG,GACF6C,EAAW4D,cACX/F,EAAYI,aAAY,SAAAC,GAAK,OAAIA,KAYvC,OAVA2F,qBAAU,WACR7D,EAASD,YAAc5C,MACtB,CAAC6C,EAAU7C,IAEd0G,qBAAU,WACJC,UAAUC,cAAcC,QAC1BC,MAAM,2CAEP,IAEEpG,EAAUgB,WAKb,gCACE,cAAC,EAAD,IACA,sBAAK6B,MAAO,CACVwD,QAAS,OACTC,SAAU,OAEVC,OAAQ,OACRC,UAAW,GACV9F,UAAU,eANb,UAOE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,UAfG,sDCFI+F,EAjBH,WACV,OACE,cAAC,IAAD,UACE,qBAAK/F,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOgG,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,kBAAZ,SACE,cAAC,EAAD,c,wBCLGC,EAPDC,sBACZvE,IACAwE,8BACEC,0BAAgBC,OCFpBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUP,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJQ,SAASC,eAAe,W","file":"static/js/main.8ab6a9c3.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = '/api/characters'\n\nexport const getCharacter = async (id) => {\n  try {\n    const response = await axios.get(`${baseUrl}/${id}`)\n\n    return response.data\n  }\n  catch (e) {\n    console.log('Character not found:', e.response.data.error)\n  }\n}\n\nexport const saveCharacter = async (character) => {\n  try {\n    const id = character.id\n    const response = axios.put(`${baseUrl}/${id}`, character)\n\n    return response.data\n  }\n  catch (e) {\n    console.log('error saving character', e)\n  }\n}\n\nexport default { getCharacter, saveCharacter }\n","import { connect, useSelector } from 'react-redux'\nimport { updateCharacter } from '../../characterReducer'\n\nconst DeathSaves = (props) => {\n  const character = useSelector((state) => state)\n\n  const updateCharacter = (event) => {\n    const data = {\n      key: event.target.className,\n      value: event.target.checked\n    }\n    props.updateCharacter(data)\n  }\n\n  const inputChecked = (name) => {\n    if (character.attributes[name] === undefined) {\n      return false\n\n    }\n    else {\n      /* eslint-disable no-eval */\n      return eval(character.attributes[name])\n    }\n  }\n\n  return (\n    <div className=\"deathSaves\">\n      <div>\n        <label>successes</label>\n        <input\n          className=\"pass1\"\n          type=\"checkbox\"\n          defaultChecked={inputChecked(\"pass1\")}\n          onClick={e => updateCharacter(e)}\n        />\n        <input\n          className=\"pass2\"\n          type=\"checkbox\"\n          defaultChecked={inputChecked(\"pass2\")}\n          onClick={e => updateCharacter(e)}\n        />\n        <input\n          className=\"pass3\"\n          type=\"checkbox\"\n          defaultChecked={inputChecked(\"pass3\")}\n          onClick={e => updateCharacter(e)}\n        />\n      </div>\n      <div>\n        <label>failures</label>\n        <input\n          className=\"fail1\"\n          type=\"checkbox\"\n          defaultChecked={inputChecked(\"fail1\")}\n          onClick={e => updateCharacter(e)}\n        />\n        <input\n          className=\"fail2\"\n          type=\"checkbox\"\n          defaultChecked={inputChecked(\"fail2\")}\n          onClick={e => updateCharacter(e)}\n        />\n        <input\n          className=\"fail3\"\n          type=\"checkbox\"\n          defaultChecked={inputChecked(\"fail3\")}\n          onClick={e => updateCharacter(e)}\n        />\n      </div>\n      <label>Death saves</label>\n    </div>\n   )\n}\n\nconst ConnectedDeathSaves = connect(null, { updateCharacter })(DeathSaves)\n\nexport default ConnectedDeathSaves\n","import { connect, useSelector } from 'react-redux'\nimport { updateCharacter } from '../../characterReducer'\nimport './LeftRow.css'\n\nconst Skill = (props) => {\n  const character = useSelector((state) => state)\n  const skillName = props.name\n  const skillLabel = props.label\n  const skillChecked = skillName.concat('Checked')\n\n  const updateCharacter = (event) => {\n    let data\n    if (event.target.id === skillName) {\n      data = {\n        key: skillName,\n        value: event.target.value\n      }\n    }\n    else {\n      data = {\n        key: skillChecked,\n        value: event.target.checked.toString()\n      }\n    }\n    props.updateCharacter(data)\n  }\n\n  const skillScore = character.attributes[skillName]\n  // Backend returns skillChecked as string, eval should be safe here\n  // value can only be 'true' or 'false'\n  const inputChecked = character.attributes[skillChecked] === undefined\n    ? false\n    /* eslint-disable no-eval */\n    : eval(character.attributes[skillChecked])\n\n  return (\n    <div id={skillName}>\n      <input\n        className=\"roundCheckbox\"\n        id={skillChecked}\n        type=\"checkbox\"\n        defaultChecked={inputChecked}\n        onClick={e => updateCharacter(e)}>\n      </input>\n      <input\n        className=\"skillInput\"\n        id={skillName}\n        type=\"number\"\n        value={skillScore || ''}\n        onChange={e => updateCharacter(e)}>\n      </input>\n      <label>{skillLabel}</label>\n    </div>\n  )\n}\n\nconst ConnectedSkill = connect(null, { updateCharacter })(Skill)\n\nexport default ConnectedSkill\n","import { getCharacter } from './characterService'\n\nexport const findCharacter = (id) => {\n  return async dispatch => {\n    const character = await getCharacter(id)\n    dispatch({\n      type: 'GET_CHARACTER',\n      payload: character\n    })\n  }\n}\n\nexport const updateCharacter = (data) => {\n  return async dispatch => {\n    dispatch({\n      type: 'UPDATE_CHARACTER',\n      payload: data\n    })\n  }\n}\n\nexport const updateWeapon = (data) => {\n  return async dispatch => {\n    dispatch({\n      type: 'UPDATE_WEAPON',\n      payload: data\n    })\n  }\n}\n\nconst reducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'GET_CHARACTER':\n      return action.payload\n    case 'UPDATE_CHARACTER':\n      const key = action.payload.key\n      const value = action.payload.value\n      const newState = {...state}\n      newState.attributes[key] = value\n\n      return newState\n    case 'UPDATE_WEAPON':\n      const newWeaponState = {...state}\n      newWeaponState.weapons[action.payload.index][action.payload.key] = action.payload.value\n\n      return newWeaponState\n    default:\n      return state\n  }\n}\n\nexport default reducer\n","import React, { useState } from 'react'\nimport axios from 'axios'\nimport { useHistory } from 'react-router-dom'\n\nconst LandingPage = () => {\n  const style = {\n    textAlign: \"center\",\n    paddingTop: \"50px\",\n  }\n\n  const baseUrl = '/api/characters'\n  const history = useHistory()\n\n  const [name, setName] = useState('')\n\n  const handleNameChange = (event) => setName(event.target.value)\n\n  const onSubmit = async (event) => {\n    event.preventDefault()\n\n    try {\n      const resp = await axios.post(baseUrl, { name: name })\n      const id = resp.data.id\n      setName('')\n      history.push(`/characters/${id}`)\n\n    }\n    catch (error) {\n      console.log(\"Error: \", error.message)\n    }\n  }\n\n  return (\n    <div>\n      <header className=\"Landing page\" >\n        <h2 style={style}>Create a new character</h2>\n      </header>\n      <div>\n        <form style={style} className=\"Character name\" onSubmit={onSubmit}>\n          <label>\n            Enter a name for your character\n            <input value={name} onChange={handleNameChange} />\n          </label>\n          <button type=\"submit\">add</button>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default LandingPage\n","import React from 'react'\nimport { connect, useSelector } from 'react-redux'\nimport { updateCharacter } from '../characterReducer'\nimport { saveCharacter } from '../characterService'\nimport './CharacterOverview.css'\n\nconst CharacterOverview = (props) => {\n  const character = useSelector((state) => state)\n\n  const updateCharacter = (event) => {\n    const data = { key: event.target.className, value: event.target.value }\n    props.updateCharacter(data)\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"characterName\">\n        <p>\n          {character.name}\n        </p>\n        <label>\n          character name\n        </label>\n        <button onClick={() => saveCharacter(character)}>save</button>\n      </div>\n      <div className=\"characterOverview\">\n        <div className=\"class twoRows\">\n          <input\n            className=\"charClass\"\n            value={character.attributes.charClass}\n            onChange={e => updateCharacter(e)}>\n          </input>\n          <label>class and level</label>\n        </div>\n        <div className=\"race twoRows\">\n          <input\n            className=\"charRace\"\n            value={character.attributes.charRace}\n            onChange={e => updateCharacter(e)}>\n          </input>\n          <label>race</label>\n        </div>\n        <div className=\"alignment twoRows\">\n          <input\n            className=\"charAlign\"\n            value={character.attributes.charAlign}\n            onChange={e => updateCharacter(e)}>\n          </input>\n          <label>alignment</label>\n        </div>\n        <div className=\"background twoRows\">\n          <input\n            className=\"charBackground\"\n            value={character.attributes.charBackground}\n            onChange={e => updateCharacter(e)}>\n          </input>\n          <label>background</label>\n        </div>\n        <div className=\"experience twoRows\">\n          <input\n            className=\"charExperience\"\n            type=\"number\"\n            min=\"0\"\n            value={character.attributes.charExperience}\n            onChange={e => updateCharacter(e)}>\n          </input>\n          <label>experience points</label>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst ConnectedCharacterOverview = connect(null, { updateCharacter })(CharacterOverview)\n\nexport default ConnectedCharacterOverview\n","import { connect, useSelector } from 'react-redux'\nimport { updateCharacter } from '../../characterReducer'\nimport { signedNumber } from '../../utilities'\n\nconst AbilityScore = (props) => {\n  const character = useSelector((state) => state)\n  const abilityName = props.name\n\n  const updateCharacter = (event) => {\n    const data = { key: abilityName, value: event.target.value }\n    props.updateCharacter(data)\n  }\n\n  const abilityScore = character.attributes[abilityName]\n  const modifier = Math.floor((abilityScore-10)/2)\n\n  return (\n    <div className=\"abilityBadge\">\n      <p className=\"name\">{abilityName}</p>\n      <div className=\"modifier\">\n        {signedNumber(modifier)}\n      </div>\n      <div>\n        <input\n          className=\"score\"\n          type=\"number\"\n          min=\"0\"\n          value={abilityScore || ''}\n          onChange={e => updateCharacter(e)}>\n        </input>\n      </div>\n    </div>\n  )\n}\n\nconst ConnectedAbilityScore = connect(null, { updateCharacter })(AbilityScore)\n\nexport default ConnectedAbilityScore\n","export const signedNumber = (maybeNumber) => {\n  let displayValue\n  if (isNaN(maybeNumber)) {\n    displayValue = ''\n  }\n  else {\n    displayValue = Math.sign(maybeNumber) < 0 ? maybeNumber : `+${maybeNumber}`\n  }\n  return displayValue\n}\n","import React from 'react'\nimport AbilityScore from './AbilityScore'\nimport './AbilityScores.css'\n\nconst AbilityScoreList = (props) => {\n  return (\n    <div id=\"abilityScoreList\">\n      <AbilityScore name=\"strength\" />\n      <AbilityScore name=\"dexterity\" />\n      <AbilityScore name=\"constitution\" />\n      <AbilityScore name=\"intelligence\" />\n      <AbilityScore name=\"wisdom\" />\n      <AbilityScore name=\"charisma\" />\n    </div>\n  )\n}\n\nexport default AbilityScoreList\n","import React from 'react'\nimport Skill from './Skill'\nimport './SavingThrows.css'\n\nconst SavingThrows = () => {\n  return (\n    <div className=\"savingThrows\">\n      <Skill name=\"strengthST\" label=\"strength\" />\n      <Skill name=\"dexterityST\" label=\"dexterity\" />\n      <Skill name=\"constitutionST\" label=\"constitution\" />\n      <Skill name=\"intelligenceST\" label=\"intelligence\" />\n      <Skill name=\"wisdomST\" label=\"wisdom\" />\n      <Skill name=\"charismaST\" label=\"charisma\" />\n      <p>saving throws</p>\n    </div>\n  )\n}\n\nexport default SavingThrows\n","import React from 'react'\nimport Skill from './Skill'\n\nconst Skills = () => {\n  return (\n    <div className=\"skills\">\n      <Skill name=\"acrobatics\" label=\"acrobatics\" />\n      <Skill name=\"animalHandling\" label=\"animal handling\" />\n      <Skill name=\"arcana\" label=\"arcana\" />\n      <Skill name=\"athletics\" label=\"athletics\" />\n      <Skill name=\"deception\" label=\"deception\" />\n      <Skill name=\"history\" label=\"history\" />\n      <Skill name=\"insight\" label=\"insight\" />\n      <Skill name=\"intimidation\" label=\"intimidation\" />\n      <Skill name=\"investigation\" label=\"investigation\" />\n      <Skill name=\"medicine\" label=\"medicine\" />\n      <Skill name=\"nature\" label=\"nature\" />\n      <Skill name=\"perception\" label=\"perception\" />\n      <Skill name=\"performance\" label=\"performance\" />\n      <Skill name=\"persuasion\" label=\"persuasion\" />\n      <Skill name=\"religion\" label=\"religion\" />\n      <Skill name=\"sleightOfHand\" label=\"sleight of hand\" />\n      <Skill name=\"stealth\" label=\"stealth\" />\n      <Skill name=\"survival\" label=\"survival\" />\n      <p>skills</p>\n    </div>\n  )\n}\n\nexport default Skills\n","import { connect, useSelector } from 'react-redux'\nimport { updateCharacter } from '../../characterReducer'\n\nconst LangAndProf = (props) => {\n  const character = useSelector((state) => state)\n\n  const updateCharacter = (event) => {\n    const data = {\n      key: event.target.id,\n      value: event.target.value\n    }\n    props.updateCharacter(data)\n  }\n\n  return (\n    <div className=\"langAndProf\">\n      <div>\n        <label>Proficiencies</label>\n        <textarea\n          className=\"proficiencies\"\n          value={character.attributes.proficiencies}\n          onChange={e => updateCharacter(e)} />\n      </div>\n      <div>\n        <label>Languages</label>\n        <textarea\n          className=\"languages\"\n          value={character.attributes.languages}\n          onChange={e => updateCharacter(e)} />\n      </div>\n      <p>other proficiencies & languages</p>\n    </div>\n  )\n}\n\nconst ConnectedLangAndProf = connect(null, { updateCharacter })(LangAndProf)\n\nexport default ConnectedLangAndProf\n","import { connect, useSelector } from 'react-redux'\nimport { updateCharacter } from '../characterReducer'\n\nconst NumberField = (props) => {\n  const character = useSelector((state) => state)\n  const label = props.label\n  const name = props.name\n\n  const updateCharacter = (event) => {\n    const data = {\n      key: name,\n      value: event.target.value\n    }\n    props.updateCharacter(data)\n  }\n\n  return (\n    <div className={name}>\n      <input\n        type= 'number'\n        value={character.attributes[name] || ''}\n        onChange={e => updateCharacter(e)}\n      />\n      <label>{label}</label>\n    </div>\n   )\n}\n\nconst ConnectedNumberField = connect(null, { updateCharacter })(NumberField)\n\nexport default ConnectedNumberField\n","import { connect, useSelector } from 'react-redux'\nimport { updateCharacter } from '../characterReducer'\n\nconst TextField = (props) => {\n  const character = useSelector((state) => state)\n  const label = props.label\n  const name = props.name\n\n  const updateCharacter = (event) => {\n    const data = {\n      key: name,\n      value: event.target.value\n    }\n    props.updateCharacter(data)\n  }\n\n  return (\n    <div className={name}>\n      <textarea\n        value={character.attributes[name] || ''}\n        onChange={e => updateCharacter(e)}\n      />\n      <label>{label}</label>\n    </div>\n   )\n}\n\nconst ConnectedTextField = connect(null, { updateCharacter })(TextField)\n\nexport default ConnectedTextField\n","import React from 'react'\nimport AbilityScoreList from './AbilityScoreList'\nimport SavingThrows from './SavingThrows'\nimport Skills from './Skills'\nimport LangAndProf from './LangAndProf'\nimport NumberField from '../NumberField'\nimport TextField from '../TextField'\nimport './LeftRow.css'\n\nconst LeftRow = () => {\n  return (\n    <div className=\"leftRow flexRow\">\n      <div id=\"skills\">\n        <AbilityScoreList />\n        <div id=\"subSkills\">\n          <NumberField name=\"inspiration\" label=\"inspiration\" />\n          <NumberField name=\"proficiencyBonus\" label=\"proficiency bonus\" />\n          <SavingThrows />\n          <Skills />\n        </div>\n      </div>\n      <div id=\"passiveSkills\">\n        <NumberField label=\"\" name=\"passiveSkillLevel\" />\n        <TextField label=\"\" name=\"passiveSkill\" />\n      </div>\n      <LangAndProf />\n    </div>\n  )\n}\n\nexport default LeftRow\n","import { connect, useSelector } from 'react-redux'\nimport { updateCharacter } from '../../characterReducer'\n\nconst Currency = (props) => {\n  const character = useSelector((state) => state)\n  const name = props.name\n\n  const updateCharacter = (event) => {\n    const data = {\n      key: name,\n      value: event.target.value\n    }\n    props.updateCharacter(data)\n  }\n\n  return (\n    <div className=\"currencyBadge\">\n      <label>{name}</label>\n      <input\n        id={name}\n        type=\"number\"\n        min=\"0\"\n        value={character.attributes[name] || ''}\n        onChange={e => updateCharacter(e)}\n      />\n    </div>\n   )\n}\n\nconst ConnectedCurrency = connect(null, { updateCharacter })(Currency)\n\nexport default ConnectedCurrency\n","import { connect, useSelector } from 'react-redux'\nimport { updateCharacter } from '../../characterReducer'\n\nconst Belongings = (props) => {\n  const character = useSelector((state) => state)\n\n  const updateCharacter = (event) => {\n    const data = {\n      key: \"belongings\",\n      value: event.target.value\n    }\n    props.updateCharacter(data)\n  }\n\n  return (\n    <div>\n      <textarea\n        id=\"belongings\"\n        value={character.attributes.belongings}\n        onChange={e => updateCharacter(e)}\n      />\n    </div>\n   )\n}\n\nconst ConnectedBelongings = connect(null, { updateCharacter })(Belongings)\n\nexport default ConnectedBelongings\n","import Currency from './Currency'\nimport Belongings from './Belongings'\nimport './MiddleRow.css'\n\nconst Equipment = (props) => {\n  return (\n    <div id=\"equipment\">\n      <div id=\"currency\">\n        <div>\n          <Currency name=\"copper\" />\n        </div>\n        <div>\n          <Currency name=\"silver\" />\n        </div>\n        <div>\n          <Currency name=\"electrum\" />\n        </div>\n        <div>\n          <Currency name=\"gold\" />\n        </div>\n        <div>\n          <Currency name=\"platinum\" />\n        </div>\n        <br/>\n      </div>\n      <Belongings />\n      <p id=\"name\">equipment</p>\n    </div>\n  )\n}\n\nexport default Equipment\n","import { connect, useSelector } from 'react-redux'\nimport { updateWeapon } from '../../characterReducer'\n\nconst Weapon = (props) => {\n  const character = useSelector((state) => state)\n  const index = props.index\n\n  const updateWeapon = (event) => {\n    const data = {\n      index: index,\n      key: event.target.className,\n      value: event.target.value\n    }\n    props.updateWeapon(data)\n  }\n\n  return (\n    <div className=\"weapon\">\n      <textarea\n        className='name'\n        value={character.weapons[index].name || ''}\n        onChange={e => updateWeapon(e)}\n      />\n      <input\n        className='bonus'\n        style={{width: '75px', textAlign: 'center'}}\n        type='number'\n        value={character.weapons[index].bonus || ''}\n        onChange={e => updateWeapon(e)}\n      />\n\n      <textarea\n        className='damage'\n        value={character.weapons[index].damage || ''}\n        onChange={e => updateWeapon(e)}\n      />\n    </div>\n  )\n}\n\nconst ConnectedWeapon = connect(null, { updateWeapon })(Weapon)\n\nexport default ConnectedWeapon\n","import React from 'react'\nimport Equipment from './Equipment'\nimport DeathSaves from './DeathSaves'\nimport NumberField from '../NumberField'\nimport TextField from '../TextField'\nimport Weapon from './Weapon'\nimport './MiddleRow.css'\n\nconst MiddleRow = () => {\n  return (\n    <div className=\"middleRow flexRow\">\n      <div id=\"combatInformation\">\n        <NumberField label=\"armor class\" name=\"armorClass\" />\n        <NumberField label=\"initiative\" name=\"initiative\" />\n        <NumberField label=\"speed\" name=\"speed\" />\n        <NumberField label=\"current hit points\" name=\"currentHitPoints\" />\n        <NumberField label=\"temporary hit points\" name=\"temporaryHitPoints\" />\n        <TextField label=\"hit dice\" name=\"hitDice\" />\n        <DeathSaves />\n      </div>\n      <div className=\"attacksAndSpells\">\n        <Weapon index={0} />\n        <Weapon index={1} />\n        <Weapon index={2} />\n      </div>\n      <Equipment />\n    </div>\n  )\n}\n\nexport default MiddleRow\n","import React from 'react'\nimport TextField from '../TextField'\nimport './RightRow.css'\n\nconst RightRow = () => {\n  return (\n    <div className=\"rightRow flexRow\">\n      <div className=\"personalStuff\">\n        <TextField name=\"personalityTraits\" label=\"personality traits\" />\n        <TextField name=\"ideals\" label=\"ideals\" />\n        <TextField name=\"bonds\" label=\"bonds\" />\n        <TextField name=\"flaws\" label=\"flaws\" />\n      </div>\n      <div className=\"featuresTraits\">\n        <TextField name=\"featsTraits\" label=\"features & traits\" />\n      </div>\n    </div>\n  )\n}\n\nexport default RightRow\n","import React, { useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport CharacterOverview from './CharacterOverview'\nimport LeftRow from './leftRow/LeftRow'\nimport MiddleRow from './middleRow/MiddleRow'\nimport RightRow from './rightRow/RightRow'\n\nimport { findCharacter } from '../characterReducer'\n\nconst Character = () => {\n  const { id } = useParams()\n  const dispatch = useDispatch()\n  const character = useSelector(state => state)\n\n  useEffect(() => {\n    dispatch(findCharacter(id))\n  }, [dispatch, id])\n\n  useEffect(() => {\n    if (navigator.userAgentData.mobile) {\n      alert('This site is best viewed on a desktop')\n    }\n  }, [])\n\n  if (!character.attributes) {\n    return <h3>Character not found</h3>\n  }\n\n  return (\n    <div >\n      <CharacterOverview />\n      <div style={{\n        display: 'flex',\n        flexWrap: 'wrap',\n\n        margin: '40px',\n        marginTop: 0\n      }} className=\"rowContainer\">\n        <LeftRow />\n        <MiddleRow />\n        <RightRow />\n      </div>\n    </div>\n  )\n}\n\nexport default Character\n","import React from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route } from 'react-router-dom'\nimport LandingPage from './LandingPage'\nimport Character from './Character'\n\nconst App = () => {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path='/'>\n            <LandingPage />\n          </Route>\n          <Route path='/characters/:id'>\n            <Character />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App\n","import { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport reducer from './characterReducer'\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n)\n\nexport default store\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}