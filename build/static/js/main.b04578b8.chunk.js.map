{"version":3,"sources":["components/LandingPage.js","characterService.js","characterReducer.js","components/CharacterOverview.js","components/leftRow/AbilityScore.js","components/leftRow/AbilityScoreList.js","components/leftRow/Skill.js","components/leftRow/SavingThrows.js","components/leftRow/Skills.js","components/leftRow/LangAndProf.js","components/leftRow/LeftRow.js","components/middleRow/Currency.js","components/middleRow/Belongings.js","components/middleRow/Equipment.js","components/middleRow/MiddleRow.js","components/RightRow.js","components/Character.js","components/App.js","store.js","index.js"],"names":["LandingPage","style","textAlign","paddingTop","history","useHistory","useState","name","setName","onSubmit","event","a","preventDefault","axios","post","resp","id","data","push","console","log","message","className","value","onChange","target","type","baseUrl","getCharacter","get","response","saveCharacter","character","put","updateCharacter","dispatch","payload","reducer","state","action","key","updatedAttributes","Object","defineProperty","attributes","writable","enumerable","configurable","newState","ConnectedCharacterOverview","connect","props","useSelector","paddingLeft","onClick","charClass","e","charRace","htmlFor","charAlign","charBackground","min","charExperience","ConnectedAbilityScore","abilityName","displayValue","abilityScore","modifier","Math","floor","isNaN","sign","AbilityScoreList","ConnectedSkill","checked","setChecked","skillName","skillScore","SavingThrows","Skills","ConnectedLangAndProf","proficiencies","languages","LeftRow","ConnectedCurrency","ConnectedBelongings","belongings","Equipment","MiddleRow","RightRow","padding","Character","useParams","useDispatch","useEffect","findCharacter","height","display","gridTemplateColumns","margin","marginTop","App","exact","path","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b04578b8.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport axios from 'axios'\nimport { useHistory } from 'react-router-dom'\n\nconst LandingPage = () => {\n  const style = {\n    textAlign: \"center\",\n    paddingTop: \"50px\",\n  }\n\n  const baseUrl = '/api/characters'\n  const history = useHistory()\n\n  const [name, setName] = useState('')\n\n  const handleNameChange = (event) => setName(event.target.value)\n\n  const onSubmit = async (event) => {\n    event.preventDefault()\n\n    try {\n      const resp = await axios.post(baseUrl, { name: name })\n      const id = resp.data.id\n      setName('')\n      history.push(`/characters/${id}`)\n\n    }\n    catch (error) {\n      console.log(\"Error: \", error.message)\n    }\n  }\n\n  return (\n    <div>\n      <header className=\"Landing page\" >\n        <h2 style={style}>Create a new character</h2>\n      </header>\n      <div>\n        <form style={style} className=\"Character name\" onSubmit={onSubmit}>\n          <label>\n            Enter a name for your character\n            <input value={name} onChange={handleNameChange} />\n          </label>\n          <button type=\"submit\">add</button>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default LandingPage\n","import axios from 'axios'\n\nconst baseUrl = '/api/characters'\n\nexport const getCharacter = async (id) => {\n  try {\n    const response = await axios.get(`${baseUrl}/${id}`)\n\n    return response.data\n  }\n  catch (e) {\n    // If status is 400, character id is most likely wrong\n    console.log('Character not found:', e.message)\n  }\n}\n\nexport const saveCharacter = async (character) => {\n  try {\n    const id = character.id\n    const response = axios.put(`${baseUrl}/${id}`, character)\n\n    return response.data\n  }\n  catch (e) {\n    console.log('error saving character', e)\n  }\n}\n\nexport default { getCharacter, saveCharacter }\n","import { getCharacter } from './characterService'\n\nexport const findCharacter = (id) => {\n  return async dispatch => {\n    const character = await getCharacter(id)\n    dispatch({\n      type: 'GET_CHARACTER',\n      payload: character\n    })\n  }\n}\n\nexport const updateCharacter = (data) => {\n  return async dispatch => {\n    dispatch({\n      type: 'UPDATE_CHARACTER',\n      payload: data\n    })\n  }\n}\n\nconst reducer = (state = {}, action) => {\n  // console.log('reducer-state now: ', state)\n  // console.log('reducer-action', action)\n  switch (action.type) {\n    case 'GET_CHARACTER':\n      return action.payload\n    case 'UPDATE_CHARACTER':\n      // New way of storing character attributes\n      // const key = action.payload.key\n      // const value = action.payload.value\n      // const type = action.payload.type\n      // newAttribute = state[type]\n      // Object.defineProperty(newAttribute, key, {value: value, writable: true, enumerable: true, configurable: true})\n      // newState = {...state, ...newAttribute}\n      // // merging two objects like this defines the property on state and state[type]\n      // delete newState[key]\n      // return newState\n      const key = action.payload.key\n      const value = action.payload.value\n      const updatedAttributes = Object.defineProperty(state.attributes, key, {\n        value: value,\n        writable: true,\n        enumerable: true,\n        configurable: true\n      })\n      const newState = { ...state, attributes: updatedAttributes }\n\n      return newState\n    default:\n      return state\n  }\n}\n\nexport default reducer\n","import React from 'react'\nimport { connect, useSelector } from 'react-redux'\nimport { updateCharacter } from '../characterReducer'\nimport { saveCharacter } from '../characterService'\nimport './CharacterOverview.css'\n\nconst CharacterOverview = (props) => {\n  const character = useSelector((state) => state)\n\n  const updateCharacter = (event) => {\n    const data = { key: event.target.className, value: event.target.value }\n    props.updateCharacter(data)\n  }\n\n  if (!character.attributes) {\n    return null\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"characterName\">\n        <p style={{ paddingLeft: '10px'}}>\n          {character.name}\n        </p>\n        <label>\n          character name\n        </label>\n        <button onClick={() => saveCharacter(character)}>save</button>\n      </div>\n      <div className=\"characterOverview\">\n        <div className=\"row\">\n          <div>\n            <input\n              className=\"charClass\"\n              value={character.attributes.charClass}\n              onChange={e => updateCharacter(e)}>\n            </input>\n            <label>class and level</label>\n          </div>\n          <div>\n            <input\n              className=\"charRace\"\n              value={character.attributes.charRace}\n              onChange={e => updateCharacter(e)}>\n            </input>\n            <label htmlFor=\"charRace\">race</label>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div>\n            <input\n              className=\"charAlign\"\n              value={character.attributes.charAlign}\n              onChange={e => updateCharacter(e)}>\n            </input>\n            <label>alignment</label>\n          </div>\n          <div>\n            <input\n              className=\"charBackground\"\n              value={character.attributes.charBackground}\n              onChange={e => updateCharacter(e)}>\n            </input>\n            <label>background</label>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div>\n            <input\n              type=\"number\"\n              min=\"0\"\n              className=\"charExperience\"\n              value={character.attributes.charExperience}\n              onChange={e => updateCharacter(e)}>\n            </input>\n            <label>experience points</label>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nconst ConnectedCharacterOverview = connect(null, { updateCharacter })(CharacterOverview)\n\nexport default ConnectedCharacterOverview\n","\nimport { connect, useSelector } from 'react-redux'\nimport { updateCharacter } from '../../characterReducer'\n\nconst AbilityScore = (props) => {\n  const character = useSelector((state) => state)\n  const abilityName = props.name\n\n  const updateCharacter = (event) => {\n    const data = { key: abilityName, value: event.target.value }\n    props.updateCharacter(data)\n  }\n\n  if (!character.attributes) {\n    return null\n  }\n\n  const abilityScore = character.attributes[abilityName]\n  //check this calc, not sure what the rules are here\n  const modifier = Math.floor((abilityScore-10)/2)\n  let displayValue\n  if (isNaN(modifier)) {\n    displayValue = ''\n  }\n  else {\n    displayValue = Math.sign(modifier) < 0 ? modifier : `+${modifier}`\n  }\n\n  return (\n    <div className=\"abilityBadge\">\n      <p className=\"name\">{abilityName}</p>\n      <div className=\"modifier\">\n        {displayValue}\n      </div>\n      <div className=\"score\">\n        <input\n          type=\"number\"\n          min=\"0\"\n          value={abilityScore}\n          onChange={e => updateCharacter(e)}>\n        </input>\n      </div>\n    </div>\n  )\n}\n\nconst ConnectedAbilityScore = connect(null, { updateCharacter })(AbilityScore)\n\nexport default ConnectedAbilityScore\n","import React from 'react'\nimport AbilityScore from './AbilityScore'\nimport './AbilityScores.css'\n\nconst AbilityScoreList = (props) => {\n  return (\n    <div id=\"abilityScoreList\">\n      <AbilityScore name=\"strength\" />\n      <AbilityScore name=\"dexterity\" />\n      <AbilityScore name=\"constitution\" />\n      <AbilityScore name=\"intelligence\" />\n      <AbilityScore name=\"wisdom\" />\n      <AbilityScore name=\"charisma\" />\n    </div>\n  )\n}\n\nexport default AbilityScoreList\n","import {useState} from 'react'\nimport { connect, useSelector } from 'react-redux'\nimport { updateCharacter } from '../../characterReducer'\nimport './LeftRow.css'\n\nconst Skill = (props) => {\n  const character = useSelector((state) => state)\n  const [checked, setChecked] = useState('false')\n  const skillName = props.name\n\n  // TODO think of a better way of saving skill data\n  // maybe change schema in backend as well\n  const updateCharacter = (event) => {\n    const data = {\n      key: skillName,\n      value: event.target.value\n    }\n    props.updateCharacter(data)\n  }\n\n  if (!character.attributes) {\n    return null\n  }\n\n  const skillScore = character.attributes[skillName]\n\n  return (\n    <div id={skillName}>\n      <input\n        className=\"roundCheckbox\"\n        type=\"checkbox\"\n        value={checked}\n        onClick={e => setChecked(!checked)}>\n      </input>\n      <input\n        className=\"skillInput\"\n        type=\"number\"\n        value={skillScore}\n        onChange={e => updateCharacter(e)}>\n      </input>\n      <label>{skillName}</label>\n    </div>\n  )\n}\n\nconst ConnectedSkill = connect(null, { updateCharacter })(Skill)\n\nexport default ConnectedSkill\n","import React from 'react'\nimport Skill from './Skill'\nimport './SavingThrows.css'\n\nconst SavingThrows = () => {\n  return (\n    <div className=\"savingThrows\">\n      <Skill name=\"strengthST\" />\n      <Skill name=\"dexterityST\" />\n      <Skill name=\"constitutionST\" />\n      <Skill name=\"intelligenceST\" />\n      <Skill name=\"wisdomST\" />\n      <Skill name=\"charismaST\" />\n      <p>saving throws</p>\n    </div>\n  )\n}\n\nexport default SavingThrows\n","import React from 'react'\nimport Skill from './Skill'\n\nconst Skills = () => {\n  return (\n    <div className=\"skills\">\n      <Skill name=\"acrobatics\" />\n      <Skill name=\"animalHandling\" />\n      <Skill name=\"arcana\" />\n      <Skill name=\"athletics\" />\n      <Skill name=\"deception\" />\n      <Skill name=\"history\" />\n      <Skill name=\"insight\" />\n      <Skill name=\"intimidation\" />\n      <Skill name=\"investigation\" />\n      <Skill name=\"medicine\" />\n      <Skill name=\"nature\" />\n      <Skill name=\"perception\" />\n      <Skill name=\"performance\" />\n      <Skill name=\"persuasion\" />\n      <Skill name=\"religion\" />\n      <Skill name=\"sleightOfHand\" />\n      <Skill name=\"stealth\" />\n      <Skill name=\"survival\" />\n      <p>skills</p>\n    </div>\n  )\n}\n\nexport default Skills\n","import { connect, useSelector } from 'react-redux'\nimport { updateCharacter } from '../../characterReducer'\n\nconst LangAndProf = (props) => {\n  const character = useSelector((state) => state)\n\n  const updateCharacter = (event) => {\n    const data = {\n      key: event.target.id,\n      value: event.target.value\n    }\n    props.updateCharacter(data)\n  }\n\n  if (!character.attributes) {\n    return null\n  }\n\n  return (\n    <div id=\"langAndProf\">\n      <div>\n        <label>Proficiencies</label>\n        <textarea\n          id=\"proficiencies\"\n          value={character.attributes.proficiencies}\n          onChange={e => updateCharacter(e)} />\n      </div>\n      <div>\n        <label>Languages</label>\n        <textarea\n          id=\"languages\"\n          value={character.attributes.languages}\n          onChange={e => updateCharacter(e)} />\n      </div>\n      <p>other proficiencies & languages</p>\n    </div>\n  )\n}\n\nconst ConnectedLangAndProf = connect(null, { updateCharacter })(LangAndProf)\n\nexport default ConnectedLangAndProf\n","import React from 'react'\nimport AbilityScoreList from './AbilityScoreList'\nimport SavingThrows from './SavingThrows'\nimport Skills from './Skills'\nimport LangAndProf from './LangAndProf'\nimport './LeftRow.css'\n\nconst LeftRow = () => {\n  return (\n    <div className=\"leftRow\">\n      <div id=\"skills\">\n        <AbilityScoreList />\n        <div id=\"subSkills\">\n          <div className=\"inspiration\">inspiration</div>\n          <div className=\"proficiencyBonus\">proficiency bonus</div>\n          <SavingThrows />\n          <Skills />\n        </div>\n      </div>\n      <div id=\"passiveSkills\"><p>passive skills I think</p></div>\n      <LangAndProf />\n    </div>\n  )\n}\n\nexport default LeftRow\n","import { connect, useSelector } from 'react-redux'\nimport { updateCharacter } from '../../characterReducer'\n\nconst Currency = (props) => {\n  const character = useSelector((state) => state)\n  const name = props.name\n\n  const updateCharacter = (event) => {\n    const data = {\n      key: name,\n      value: event.target.value\n    }\n    props.updateCharacter(data)\n  }\n\n  if (!character.attributes) {\n    return null\n  }\n\n  return (\n    <div className=\"currencyBadge\">\n      {name}\n      <input\n        id={name}\n        type=\"number\"\n        min=\"0\"\n        value={character.attributes[name]}\n        onChange={e => updateCharacter(e)}\n      />\n    </div>\n   )\n}\n\nconst ConnectedCurrency = connect(null, { updateCharacter })(Currency)\n\nexport default ConnectedCurrency\n","import { connect, useSelector } from 'react-redux'\nimport { updateCharacter } from '../../characterReducer'\n\nconst Belongings = (props) => {\n  const character = useSelector((state) => state)\n\n  const updateCharacter = (event) => {\n    const data = {\n      key: \"belongings\",\n      value: event.target.value\n    }\n    props.updateCharacter(data)\n  }\n\n  if (!character.attributes) {\n    return null\n  }\n\n  return (\n    <div>\n      <textarea\n        id=\"belongings\"\n        value={character.attributes.belongings}\n        onChange={e => updateCharacter(e)}\n      />\n    </div>\n   )\n}\n\nconst ConnectedBelongings = connect(null, { updateCharacter })(Belongings)\n\nexport default ConnectedBelongings\n","import Currency from './Currency'\nimport Belongings from './Belongings'\nimport './MiddleRow.css'\n\nconst Equipment = (props) => {\n  return (\n    <div id=\"equipment\">\n      <div id=\"currency\">\n        <div>\n          <Currency name=\"copper\" />\n        </div>\n        <div>\n          <Currency name=\"silver\" />\n        </div>\n        <div>\n          <Currency name=\"electrum\" />\n        </div>\n        <div>\n          <Currency name=\"gold\" />\n        </div>\n        <div>\n          <Currency name=\"platinum\" />\n        </div>\n        <br/>\n      </div>\n      <Belongings />\n      <p id=\"name\">equipment</p>\n    </div>\n  )\n}\n\nexport default Equipment\n","import React from 'react'\nimport Equipment from './Equipment'\nimport './MiddleRow.css'\n\nconst MiddleRow = () => {\n  return (\n    <div className=\"middleRow\">\n      <div id=\"combatInformation\">\n        <div id=\"armorClass\"><p>armor class</p></div>\n        <div id=\"initiative\"><p>initiative</p></div>\n        <div id=\"speed\"><p>speed</p></div>\n        <div id=\"currentHitPoints\"><p>current hit points</p></div>\n        <div id=\"temporaryHitPoints\"><p>temporary hit points</p></div>\n        <div id=\"hitDice\"><p>hit dice</p></div>\n        <div id=\"deathSaves\"><p>death saves</p></div>\n      </div>\n      <div id=\"attacksAndSpells\">\n        <p>attacks & spellcasting</p>\n      </div>\n      <Equipment />\n    </div>\n  )\n}\n\nexport default MiddleRow\n","import React from 'react'\nimport './RightRow.css'\n\nconst RightRow = () => {\n  return (\n    <div className=\"rightRow\">\n      <div style={{ padding: \"10px\" }} id=\"personalStuff\">\n        <div id=\"personalityTraits\"><p>personality traits</p></div>\n        <div id=\"ideals\"><p>ideals</p></div>\n        <div id=\"bonds\"><p>bonds</p></div>\n        <div id=\"flaws\"><p>flaws</p></div>\n      </div>\n      <div id=\"featuresTraits\">\n        <p>features & traits</p>\n      </div>\n    </div>\n  )\n}\n\nexport default RightRow\n","import React, { useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\n\nimport CharacterOverview from './CharacterOverview'\nimport LeftRow from './leftRow/LeftRow'\nimport MiddleRow from './middleRow/MiddleRow'\nimport RightRow from './RightRow'\n\nimport { findCharacter } from '../characterReducer'\n\nconst Character = () => {\n  const { id } = useParams()\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(findCharacter(id))\n  }, [dispatch, id])\n\n  return (\n    <div style={{ height: '1280px' }}>\n      <CharacterOverview />\n      <div style={{\n        display: 'grid',\n        gridTemplateColumns: 'repeat(3, 1fr)',\n        height: '100%',\n        margin: '40px',\n        marginTop: 0\n      }} className=\"rowContainer\">\n        <LeftRow />\n        <MiddleRow />\n        <RightRow />\n      </div>\n    </div>\n  )\n}\n\nexport default Character\n","import React from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route } from 'react-router-dom'\nimport LandingPage from './LandingPage'\nimport Character from './Character'\n\nconst App = () => {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path='/'>\n            <LandingPage />\n          </Route>\n          <Route path='/characters/:id'>\n            <Character />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App\n","import { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport reducer from './characterReducer'\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n)\n\nexport default store\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}