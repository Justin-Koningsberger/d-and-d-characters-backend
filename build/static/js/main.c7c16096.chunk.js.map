{"version":3,"sources":["components/LandingPage.js","components/CharacterOverview.js","components/leftRow/AbilityScores.js","components/leftRow/SavingThrows.js","components/leftRow/Skills.js","components/leftRow/LeftRow.js","components/MiddleRow.js","components/RightRow.js","components/Character.js","components/App.js","index.js"],"names":["LandingPage","style","textAlign","paddingTop","history","useHistory","useState","name","setName","onSubmit","event","a","preventDefault","axios","post","resp","id","data","push","console","log","message","className","value","onChange","target","type","CharacterOverview","character","updateCharacter","charClass","setCharClass","charRace","setCharRace","charAlign","setCharAlign","charBackground","setCharBackground","charExperience","setCharExperience","useEffect","attributes","attrs","paddingLeft","onClick","e","htmlFor","min","AbilityScores","strength","setStrength","dexterity","setDexterity","constitution","setConstitution","intelligence","setIntelligence","wisdom","setWisdom","charisma","setCharisma","SavingThrows","Skills","LeftRow","MiddleRow","RightRow","Character","baseUrl","useParams","setCharacter","fetchCharacter","get","result","characterToUpdate","Object","assign","saveCharacter","error","characterToSave","put","height","display","gridTemplateColumns","margin","marginTop","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c7c16096.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport axios from 'axios'\nimport { useHistory } from 'react-router-dom'\n\nconst LandingPage = () => {\n  const style = {\n    textAlign: \"center\",\n    paddingTop: \"50px\",\n  }\n\n  const baseUrl = '/api/characters'\n  const history = useHistory()\n\n  const [name, setName] = useState('')\n\n  const handleNameChange = (event) => setName(event.target.value)\n\n  const onSubmit = async (event) => {\n    event.preventDefault()\n\n    try {\n      const resp = await axios.post(baseUrl, { name: name })\n      const id = resp.data.id\n      setName('')\n      history.push(`/characters/${id}`)\n\n    }\n    catch (error) {\n      console.log(\"Error: \", error.message)\n    }\n  }\n\n  return (\n    <div>\n      <header className=\"Landing page\" >\n        <h2 style={style}>Create a new character</h2>\n      </header>\n      <div>\n        <form style={style} className=\"Character name\" onSubmit={onSubmit}>\n          <label>\n            Enter a name for your character\n            <input value={name} onChange={handleNameChange} />\n          </label>\n          <button type=\"submit\">add</button>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default LandingPage\n","import React, { useState, useEffect } from 'react'\nimport './CharacterOverview.css'\n\nconst CharacterOverview = ({ character, updateCharacter }) => {\n  const [charClass, setCharClass] = useState('')\n  const [charRace, setCharRace] = useState('')\n  const [charAlign, setCharAlign] = useState('')\n  const [charBackground, setCharBackground] = useState('')\n  const [charExperience, setCharExperience] = useState('')\n\n  useEffect(() => {\n    if (typeof character.attributes !== 'undefined') {\n      const attrs = character.attributes\n\n      setCharClass(attrs.charClass || '')\n      setCharRace(attrs.charRace || '')\n      setCharAlign(attrs.charAlign || '')\n      setCharBackground(attrs.charBackground || '')\n      setCharExperience(attrs.charExperience || '')\n\n    }\n  }, [character.attributes])\n\n  const updateChar = () => {\n    const data = { charClass, charRace, charAlign, charBackground, charExperience }\n\n    updateCharacter(data)\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"characterName\">\n        <p style={{ paddingLeft: '10px'}}>\n          {character?.name}\n        </p>\n        <label>\n          character name\n        </label>\n        <button onClick={() => console.log('character object:', character)}>values?</button>\n      </div>\n      <div className=\"characterOverview\">\n        <div className=\"row\">\n          <div className=\"charClass\">\n            <input\n              value={charClass}\n              onChange={ e => setCharClass(e.target.value) }>\n            </input>\n            <label>class and level</label>\n          </div>\n          <div>\n            <input\n              className=\"charRace\"\n              value={charRace}\n              onChange={ e => setCharRace(e.target.value) }>\n            </input>\n            <label htmlFor=\"charRace\">race</label>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div>\n            <input\n              className=\"charAlign\"\n              value={charAlign}\n              onChange={ e => setCharAlign(e.target.value) }>\n            </input>\n            <label>alignment</label>\n          </div>\n          <div>\n            <input\n              className=\"charBackground\"\n              value={charBackground}\n              onChange={ e => setCharBackground(e.target.value) }>\n            </input>\n            <label>background</label>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div>\n            <input\n              type=\"number\"\n              min=\"0\"\n              className=\"charExperience\"\n              value={charExperience}\n              onChange={ e => setCharExperience(e.target.value) }>\n            </input>\n            <label>experience points</label>\n          </div>\n        </div>\n      </div>\n      <button onClick={updateChar}>update</button>\n    </div>\n  )\n}\n\nexport default CharacterOverview\n","import React, { useState, useEffect } from 'react'\nimport './AbilityScores.css'\n\nconst AbilityScores = ({ character, updateCharacter }) => {\n  const [strength, setStrength] = useState('')\n  const [dexterity, setDexterity] = useState('')\n  const [constitution, setConstitution] = useState('')\n  const [intelligence, setIntelligence] = useState('')\n  const [wisdom, setWisdom] = useState('')\n  const [charisma, setCharisma] = useState('')\n\n  useEffect(() => {\n    if (typeof character.attributes !== 'undefined') {\n      const attrs = character.attributes\n\n      setStrength(attrs.strength || '')\n      setDexterity(attrs.dexterity || '')\n      setConstitution(attrs.constitution || '')\n      setIntelligence(attrs.intelligence || '')\n      setWisdom(attrs.wisdom || '')\n      setCharisma(attrs.charisma || '')\n\n    }\n  }, [character.attributes])\n\n  const updateChar = () => {\n    const data = {\n      strength,\n      dexterity,\n      constitution,\n      intelligence,\n      wisdom,\n      charisma\n    }\n\n    updateCharacter(data)\n  }\n  return (\n    <div id=\"abilityScores\">\n      {/* TODO - For sure make components out of these elements\n          when I settle on a style */}\n      <div>\n        <input\n          type=\"number\"\n          value={strength}\n          onChange={ e => setStrength(e.target.value) }\n          id=\"strength\"></input>\n        <label>strength</label>\n      </div>\n      <div>\n        <input\n          type=\"number\"\n          value={dexterity}\n          onChange={ e => setDexterity(e.target.value) }\n          id=\"dexterity\"></input>\n        <label>dexterity</label>\n      </div>\n      <div>\n        <input\n          type=\"number\"\n          value={constitution}\n          onChange={ e => setConstitution(e.target.value) }\n          id=\"constitution\"></input>\n        <label>constitution</label>\n      </div>\n      <div>\n        <input\n          type=\"number\"\n          value={intelligence}\n          onChange={ e => setIntelligence(e.target.value) }\n          id=\"intelligence\"></input>\n        <label>intelligence</label>\n      </div>\n      <div>\n        <input\n          type=\"number\"\n          value={wisdom}\n          onChange={ e => setWisdom(e.target.value) }\n          id=\"wisdom\"></input>\n        <label>wisdom</label>\n      </div>\n      <div>\n        <input\n          type=\"number\"\n          value={charisma}\n          onChange={ e => setCharisma(e.target.value) }\n          id=\"charisma\"></input>\n        <label>charisma</label>\n      </div>\n    <button onClick={updateChar}>update</button>\n    </div>\n  )\n}\n\nexport default AbilityScores\n","import React from 'react'\nimport './SavingThrows.css'\n\nconst SavingThrows = ({ character, updateCharacter }) => {\n  // I think all these values need to be calculated from character attributes\n  // Also these will be sub components, shared with Skills\n  return (\n    <div className=\"savingThrows\">\n      <div id=\"strength\">\n        <input></input>\n        strength\n      </div>\n      <div id=\"dexterity\">\n        <input></input>\n        Dexterity\n      </div>\n      <div id=\"constitution\">\n        <input></input>\n        Constitution\n      </div>\n      <div id=\"intelligence\">\n        <input></input>\n        Intelligence\n      </div>\n      <div id=\"wisdom\">\n        <input></input>\n        Wisdom\n      </div>\n      <div id=\"charisma\">\n        <input></input>\n        Charisma\n      </div>\n      savingThrows\n    </div>\n  )\n}\n\nexport default SavingThrows\n","import React from 'react'\n\nconst Skills = ({ character, updateCharacter }) => {\n  return (\n    <div className=\"skills\">\n      More coming!!\n      {/* These will be sub components, shared with SavingThrows */}\n      <div id=\"acrobatics\">\n        <input></input>\n        <label>Acrobatics</label>\n      </div>\n      <div id=\"animalHandling\">\n        <input></input>\n        <label>Animal handling</label>\n      </div>\n      <div id=\"arcana\">\n        <input></input>\n        <label>Arcana</label>\n      </div>\n      skills\n    </div>\n  )\n}\n\nexport default Skills\n","import React from 'react'\nimport AbilityScores from './AbilityScores'\nimport SavingThrows from './SavingThrows'\nimport Skills from './Skills'\nimport './LeftRow.css'\n\nconst LeftRow = ({ character, updateCharacter }) => {\n\n  return (\n    <div className=\"leftRow\">\n      <div id=\"skills\">\n        <AbilityScores character={character} updateCharacter={updateCharacter} />\n        <div id=\"subSkills\">\n          <div className=\"inspiration\">inspiration</div>\n          <div className=\"proficiencyBonus\">proficiency bonus</div>\n          <SavingThrows character={character} updateCharacter={updateCharacter} />\n          <Skills character={character} updateCharacter={updateCharacter} />\n        </div>\n      </div>\n      <div id=\"passiveSkills\">passive skills I think</div>\n      <div id=\"langAndProf\">languages & proficiencies</div>\n    </div>\n  )\n}\n\nexport default LeftRow\n","import React from 'react'\nimport './MiddleRow.css'\n\nconst MiddleRow = () => {\n  return (\n    <div className=\"middleRow\">\n      <div id=\"hackyStuff\">\n        <div id=\"combatInformation1\">\n          combat information\n          <div id=\"div1\"></div>\n          <div id=\"div2\"></div>\n          <div id=\"div3\"></div>\n          <div id=\"div4\"></div>\n          <div id=\"div5\"></div>\n        </div>\n        <div id=\"combatInformation2\">\n          <div id=\"hitDice\">hit dice</div>\n          <div id=\"deathSaves\">death saves</div>\n        </div>\n      </div>\n      <div id=\"attacksAndSpells\">\n        attacks & spellcasting\n      </div>\n      <div id=\"equipment\">equipment</div>\n    </div>\n  )\n}\n\nexport default MiddleRow\n","import React from 'react'\nimport './RightRow.css'\n\nconst RightRow = () => {\n  return (\n    <div className=\"rightRow\">\n      <div id=\"personalStuff\">\n        <div id=\"personalityTraits\">personality traits</div>\n        <div id=\"ideals\">ideals</div>\n        <div id=\"bonds\">bonds</div>\n        <div id=\"flaws\">flaws</div>\n      </div>\n      <div id=\"featuresTraits\">\n        features & traits\n      </div>\n    </div>\n  )\n}\n\nexport default RightRow\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { useParams } from 'react-router-dom'\nimport CharacterOverview from './CharacterOverview'\nimport LeftRow from './leftRow/LeftRow'\nimport MiddleRow from './MiddleRow'\nimport RightRow from './RightRow'\n\nconst Character = () => {\n  const baseUrl = '/api/characters'\n  const { id } = useParams()\n\n  const [character, setCharacter] = useState({})\n\n  useEffect(() => {\n    const fetchCharacter = async () => {\n      try {\n        const result = await axios.get(`${baseUrl}/${id}`)\n        setCharacter(result.data)\n      }\n      catch (e) {\n        // If status is 400, character id is most likely wrong\n        console.log(e)\n      }\n    }\n    fetchCharacter()\n  }, [id])\n\n  const updateCharacter = (data) => {\n    const characterToUpdate = character\n\n    if (!characterToUpdate.attributes) {\n      characterToUpdate.attributes = {}\n    }\n    Object.assign(characterToUpdate.attributes, data)\n\n    try {\n      // console.log('updating', characterToUpdate)\n      saveCharacter(characterToUpdate)\n      setCharacter(characterToUpdate)\n    }\n    catch (e) {\n      console.error('Uh oh...', e)\n    }\n  }\n\n  const saveCharacter = async (characterToSave) => {\n    const id = character.id\n    await axios.put(`${baseUrl}/${id}`, characterToSave)\n  }\n\n  return (\n    <div style={{ height: '1280px' }}>\n      <CharacterOverview character={character} updateCharacter={updateCharacter} />\n      <div style={{\n        display: 'grid',\n        gridTemplateColumns: 'repeat(3, 1fr)',\n        height: '100%',\n        margin: '40px',\n        marginTop: 0\n      }} className=\"rowContainer\">\n        <LeftRow character={character} updateCharacter={updateCharacter} />\n        <MiddleRow character={character} updateCharacter={updateCharacter} />\n        <RightRow character={character} updateCharacter={updateCharacter} />\n      </div>\n    </div>\n  )\n}\n\nexport default Character\n","import React from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route } from 'react-router-dom'\nimport LandingPage from './LandingPage'\nimport Character from './Character'\n\nconst App = () => {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path='/'>\n            <LandingPage />\n          </Route>\n          <Route path='/characters/:id'>\n            <Character />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}